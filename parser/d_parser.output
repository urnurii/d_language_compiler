Terminals unused in grammar

    NEW
    PUBLIC
    PRIVATE
    PROTECTED
    AUTO
    REF


State 77 conflicts: 2 shift/reduce
State 104 conflicts: 1 shift/reduce
State 110 conflicts: 2 reduce/reduce
State 167 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: module_clause ';' e_import_decl_list ';' e_top_level_decl_list

    2 module_clause: MODULE ID

    3 e_import_decl_list: import_decl_list
    4                   | %empty

    5 import_decl_list: import_decl_list import_decl ';'
    6                 | import_decl ';'

    7 import_decl: IMPORT import_spec
    8            | IMPORT '(' e_import_spec_list ')'

    9 e_import_spec_list: import_spec_list
   10                   | %empty

   11 import_spec_list: import_spec_list import_spec ';'
   12                 | import_spec ';'

   13 import_spec: STRING_LIT
   14            | '.' STRING_LIT
   15            | STRING_LIT STRING_LIT

   16 e_top_level_decl_list: top_level_decl_list
   17                      | %empty

   18 top_level_decl_list: top_level_decl_list top_level_decl ';'
   19                    | top_level_decl ';'

   20 top_level_decl: decl
   21               | func_decl
   22               | class_decl
   23               | enum_decl

   24 decl: const_decl
   25     | var_decl

   26 func_decl: FUNC ID signature
   27          | FUNC ID signature block

   28 signature: params results
   29          | params

   30 params: '(' param_list ')'
   31       | '(' ')'

   32 param_list: param_list ',' param_decl
   33           | param_decl

   34 param_decl: id_list type
   35           | type

   36 results: params
   37        | type

   38 block: '{' stmt_list '}'
   39      | '{' '}'

   40 stmt_list: stmt_list stmt ';'
   41          | stmt ';'

   42 stmt: decl
   43     | simple_stmt
   44     | return_stmt
   45     | BREAK
   46     | CONTINUE
   47     | block
   48     | if_stmt
   49     | switch_stmt
   50     | for_stmt
   51     | while_stmt
   52     | do_while_stmt
   53     | foreach_stmt

   54 simple_stmt: expr
   55            | expr INC
   56            | expr DEC
   57            | expr_list '=' expr_list
   58            | id_list PLUS_ASSIGN expr_list
   59            | id_list MINUS_ASSIGN expr_list
   60            | id_list MUL_ASSIGN expr_list
   61            | id_list DIV_ASSIGN expr_list
   62            | id_list TILDE_ASSIGN expr_list

   63 return_stmt: RETURN
   64            | RETURN expr_list

   65 const_decl: CONST const_spec
   66           | CONST '(' const_spec_list ')'

   67 const_spec_list: const_spec_list ';' const_spec
   68                | const_spec ';'

   69 const_spec: id_list
   70           | id_list '=' expr_list
   71           | id_list type '=' expr_list

   72 var_decl: VAR var_spec
   73         | VAR '(' var_spec_list ')'

   74 var_spec_list: var_spec_list ';' var_spec
   75              | var_spec ';'

   76 var_spec: id_list type
   77         | id_list type '=' expr_list
   78         | id_list '=' expr_list

   79 id_list: id_list ',' ID
   80        | ID

   81 type: type_name
   82     | type_name '[' type_list ']'
   83     | type_lit

   84 type_name: INT
   85          | FLOAT
   86          | DOUBLE
   87          | REAL
   88          | BOOL
   89          | CHAR
   90          | STRING
   91          | VOID
   92          | ID

   93 type_list: type_list ',' type
   94          | type

   95 type_lit: array_type
   96         | func_type
   97         | slice_type

   98 array_type: '[' expr ']' type

   99 func_type: FUNC signature

  100 slice_type: '[' ']' type

  101 expr_list: expr_list ',' expr
  102          | expr

  103 expr: primary_expr
  104     | INT_LIT
  105     | FLOAT_LIT
  106     | STRING_LIT
  107     | BOOL_LIT
  108     | expr '+' expr
  109     | expr '-' expr
  110     | expr '*' expr
  111     | expr '/' expr
  112     | expr EQ expr
  113     | expr NE expr
  114     | expr '<' expr
  115     | expr '>' expr
  116     | expr LE expr
  117     | expr GE expr
  118     | expr AND_OP expr
  119     | expr OR_OP expr
  120     | '!' expr
  121     | '-' expr

  122 primary_expr: operand
  123             | primary_expr '[' expr ']'
  124             | primary_expr '[' ':' ']'
  125             | primary_expr '[' expr ':' ']'
  126             | primary_expr '[' ':' expr ']'
  127             | primary_expr '[' expr ':' expr ']'
  128             | primary_expr '[' ':' expr ':' expr ']'
  129             | primary_expr '[' expr ':' expr ':' expr ']'

  130 operand: operand_name
  131        | operand_name '[' type_list ']'
  132        | '(' expr ')'

  133 operand_name: ID
  134             | THIS
  135             | SUPER

  136 if_stmt: IF '(' expr ')' block
  137        | IF '(' expr ')' block ELSE block
  138        | IF '(' expr ')' block ELSE if_stmt

  139 switch_stmt: SWITCH '(' expr ')' '{' case_list '}'
  140            | SWITCH '{' case_list '}'

  141 case_list: case_list case_item
  142          | case_item

  143 case_item: CASE expr ':' stmt_list
  144          | DEFAULT ':' stmt_list

  145 for_stmt: FOR '(' simple_stmt ';' expr ';' simple_stmt ')' block
  146         | FOR '(' ';' expr ';' ')' block
  147         | FOR '(' ';' ';' ')' block
  148         | FOR expr block

  149 while_stmt: WHILE '(' expr ')' block

  150 do_while_stmt: DO block WHILE '(' expr ')' ';'

  151 foreach_stmt: FOREACH '(' ID ':' expr ')' block
  152             | FOREACH '(' type ID ':' expr ')' block

  153 class_decl: CLASS ID class_inherit_opt '{' class_body_opt '}'

  154 class_inherit_opt: ':' ID
  155                  | %empty

  156 class_body_opt: class_body
  157               | %empty

  158 class_body: class_body class_member
  159           | class_member

  160 class_member: decl ';'
  161             | func_decl
  162             | OVERRIDE func_decl

  163 enum_decl: ENUM ID '{' enum_member_list '}'
  164          | ENUM ID '{' enum_member_list ',' '}'

  165 enum_member_list: enum_member_list ',' enum_member
  166                 | enum_member

  167 enum_member: ID
  168            | ID '=' expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 120
    '(' (40) 8 30 31 66 73 132 136 137 138 139 145 146 147 149 150 151 152
    ')' (41) 8 30 31 66 73 132 136 137 138 139 145 146 147 149 150 151 152
    '*' (42) 110
    '+' (43) 108
    ',' (44) 32 79 93 101 164 165
    '-' (45) 109 121
    '.' (46) 14
    '/' (47) 111
    ':' (58) 124 125 126 127 128 129 143 144 151 152 154
    ';' (59) 1 5 6 11 12 18 19 40 41 67 68 74 75 145 146 147 150 160
    '<' (60) 114
    '=' (61) 57 70 71 77 78 168
    '>' (62) 115
    '[' (91) 82 98 100 123 124 125 126 127 128 129 131
    ']' (93) 82 98 100 123 124 125 126 127 128 129 131
    '{' (123) 38 39 139 140 153 163 164
    '}' (125) 38 39 139 140 153 163 164
    error (256)
    MODULE (258) 2
    IMPORT (259) 7 8
    CONST (260) 65 66
    FUNC (261) 26 27 99
    VAR (262) 72 73
    RETURN (263) 63 64
    BREAK (264) 45
    CONTINUE (265) 46
    IF (266) 136 137 138
    ELSE (267) 137 138
    SWITCH (268) 139 140
    CASE (269) 143
    DEFAULT (270) 144
    DO (271) 150
    WHILE (272) 149 150
    FOR (273) 145 146 147 148
    FOREACH (274) 151 152
    CLASS (275) 153
    ENUM (276) 163 164
    NEW (277)
    THIS (278) 134
    SUPER (279) 135
    OVERRIDE (280) 162
    PUBLIC (281)
    PRIVATE (282)
    PROTECTED (283)
    AUTO (284)
    REF (285)
    INT (286) 84
    FLOAT (287) 85
    DOUBLE (288) 86
    REAL (289) 87
    BOOL (290) 88
    CHAR (291) 89
    STRING (292) 90
    VOID (293) 91
    INT_LIT <int_lit> (294) 104
    FLOAT_LIT <float_lit> (295) 105
    BOOL_LIT <bool_lit> (296) 107
    ID <identifier> (297) 2 26 27 79 80 92 133 151 152 153 154 163 164 167 168
    STRING_LIT <str_lit> (298) 13 14 15 106
    PLUS_ASSIGN (299) 58
    MINUS_ASSIGN (300) 59
    MUL_ASSIGN (301) 60
    DIV_ASSIGN (302) 61
    TILDE_ASSIGN (303) 62
    EQ (304) 112
    NE (305) 113
    LE (306) 116
    GE (307) 117
    AND_OP (308) 118
    OR_OP (309) 119
    INC (310) 55
    DEC (311) 56
    UMINUS (312)


Nonterminals, with rules where they appear

    $accept (76)
        on left: 0
    program (77)
        on left: 1
        on right: 0
    module_clause (78)
        on left: 2
        on right: 1
    e_import_decl_list (79)
        on left: 3 4
        on right: 1
    import_decl_list (80)
        on left: 5 6
        on right: 3 5
    import_decl (81)
        on left: 7 8
        on right: 5 6
    e_import_spec_list (82)
        on left: 9 10
        on right: 8
    import_spec_list (83)
        on left: 11 12
        on right: 9 11
    import_spec (84)
        on left: 13 14 15
        on right: 7 11 12
    e_top_level_decl_list (85)
        on left: 16 17
        on right: 1
    top_level_decl_list (86)
        on left: 18 19
        on right: 16 18
    top_level_decl (87)
        on left: 20 21 22 23
        on right: 18 19
    decl (88)
        on left: 24 25
        on right: 20 42 160
    func_decl (89)
        on left: 26 27
        on right: 21 161 162
    signature (90)
        on left: 28 29
        on right: 26 27 99
    params (91)
        on left: 30 31
        on right: 28 29 36
    param_list (92)
        on left: 32 33
        on right: 30 32
    param_decl (93)
        on left: 34 35
        on right: 32 33
    results (94)
        on left: 36 37
        on right: 28
    block (95)
        on left: 38 39
        on right: 27 47 136 137 138 145 146 147 148 149 150 151 152
    stmt_list (96)
        on left: 40 41
        on right: 38 40 143 144
    stmt (97)
        on left: 42 43 44 45 46 47 48 49 50 51 52 53
        on right: 40 41
    simple_stmt (98)
        on left: 54 55 56 57 58 59 60 61 62
        on right: 43 145
    return_stmt (99)
        on left: 63 64
        on right: 44
    const_decl (100)
        on left: 65 66
        on right: 24
    const_spec_list (101)
        on left: 67 68
        on right: 66 67
    const_spec (102)
        on left: 69 70 71
        on right: 65 67 68
    var_decl (103)
        on left: 72 73
        on right: 25
    var_spec_list (104)
        on left: 74 75
        on right: 73 74
    var_spec (105)
        on left: 76 77 78
        on right: 72 74 75
    id_list (106)
        on left: 79 80
        on right: 34 58 59 60 61 62 69 70 71 76 77 78 79
    type (107)
        on left: 81 82 83
        on right: 34 35 37 71 76 77 93 94 98 100 152
    type_name (108)
        on left: 84 85 86 87 88 89 90 91 92
        on right: 81 82
    type_list (109)
        on left: 93 94
        on right: 82 93 131
    type_lit (110)
        on left: 95 96 97
        on right: 83
    array_type (111)
        on left: 98
        on right: 95
    func_type (112)
        on left: 99
        on right: 96
    slice_type (113)
        on left: 100
        on right: 97
    expr_list (114)
        on left: 101 102
        on right: 57 58 59 60 61 62 64 70 71 77 78 101
    expr (115)
        on left: 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121
        on right: 54 55 56 98 101 102 108 109 110 111 112 113 114 115 116 117 118 119 120 121 123 125 126 127 128 129 132 136 137 138 139 143 145 146 148 149 150 151 152 168
    primary_expr (116)
        on left: 122 123 124 125 126 127 128 129
        on right: 103 123 124 125 126 127 128 129
    operand (117)
        on left: 130 131 132
        on right: 122
    operand_name (118)
        on left: 133 134 135
        on right: 130 131
    if_stmt (119)
        on left: 136 137 138
        on right: 48 138
    switch_stmt (120)
        on left: 139 140
        on right: 49
    case_list (121)
        on left: 141 142
        on right: 139 140 141
    case_item (122)
        on left: 143 144
        on right: 141 142
    for_stmt (123)
        on left: 145 146 147 148
        on right: 50
    while_stmt (124)
        on left: 149
        on right: 51
    do_while_stmt (125)
        on left: 150
        on right: 52
    foreach_stmt (126)
        on left: 151 152
        on right: 53
    class_decl (127)
        on left: 153
        on right: 22
    class_inherit_opt (128)
        on left: 154 155
        on right: 153
    class_body_opt (129)
        on left: 156 157
        on right: 153
    class_body (130)
        on left: 158 159
        on right: 156 158
    class_member (131)
        on left: 160 161 162
        on right: 158 159
    enum_decl (132)
        on left: 163 164
        on right: 23
    enum_member_list (133)
        on left: 165 166
        on right: 163 164 165
    enum_member (134)
        on left: 167 168
        on right: 165 166


State 0

    0 $accept: . program $end

    MODULE  shift, and go to state 1

    program        go to state 2
    module_clause  go to state 3


State 1

    2 module_clause: MODULE . ID

    ID  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: module_clause . ';' e_import_decl_list ';' e_top_level_decl_list

    ';'  shift, and go to state 6


State 4

    2 module_clause: MODULE ID .

    $default  reduce using rule 2 (module_clause)


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: module_clause ';' . e_import_decl_list ';' e_top_level_decl_list

    IMPORT  shift, and go to state 7

    $default  reduce using rule 4 (e_import_decl_list)

    e_import_decl_list  go to state 8
    import_decl_list    go to state 9
    import_decl         go to state 10


State 7

    7 import_decl: IMPORT . import_spec
    8            | IMPORT . '(' e_import_spec_list ')'

    STRING_LIT  shift, and go to state 11
    '('         shift, and go to state 12
    '.'         shift, and go to state 13

    import_spec  go to state 14


State 8

    1 program: module_clause ';' e_import_decl_list . ';' e_top_level_decl_list

    ';'  shift, and go to state 15


State 9

    3 e_import_decl_list: import_decl_list .
    5 import_decl_list: import_decl_list . import_decl ';'

    IMPORT  shift, and go to state 7

    $default  reduce using rule 3 (e_import_decl_list)

    import_decl  go to state 16


State 10

    6 import_decl_list: import_decl . ';'

    ';'  shift, and go to state 17


State 11

   13 import_spec: STRING_LIT .
   15            | STRING_LIT . STRING_LIT

    STRING_LIT  shift, and go to state 18

    $default  reduce using rule 13 (import_spec)


State 12

    8 import_decl: IMPORT '(' . e_import_spec_list ')'

    STRING_LIT  shift, and go to state 11
    '.'         shift, and go to state 13

    $default  reduce using rule 10 (e_import_spec_list)

    e_import_spec_list  go to state 19
    import_spec_list    go to state 20
    import_spec         go to state 21


State 13

   14 import_spec: '.' . STRING_LIT

    STRING_LIT  shift, and go to state 22


State 14

    7 import_decl: IMPORT import_spec .

    $default  reduce using rule 7 (import_decl)


State 15

    1 program: module_clause ';' e_import_decl_list ';' . e_top_level_decl_list

    CONST  shift, and go to state 23
    FUNC   shift, and go to state 24
    VAR    shift, and go to state 25
    CLASS  shift, and go to state 26
    ENUM   shift, and go to state 27

    $default  reduce using rule 17 (e_top_level_decl_list)

    e_top_level_decl_list  go to state 28
    top_level_decl_list    go to state 29
    top_level_decl         go to state 30
    decl                   go to state 31
    func_decl              go to state 32
    const_decl             go to state 33
    var_decl               go to state 34
    class_decl             go to state 35
    enum_decl              go to state 36


State 16

    5 import_decl_list: import_decl_list import_decl . ';'

    ';'  shift, and go to state 37


State 17

    6 import_decl_list: import_decl ';' .

    $default  reduce using rule 6 (import_decl_list)


State 18

   15 import_spec: STRING_LIT STRING_LIT .

    $default  reduce using rule 15 (import_spec)


State 19

    8 import_decl: IMPORT '(' e_import_spec_list . ')'

    ')'  shift, and go to state 38


State 20

    9 e_import_spec_list: import_spec_list .
   11 import_spec_list: import_spec_list . import_spec ';'

    STRING_LIT  shift, and go to state 11
    '.'         shift, and go to state 13

    $default  reduce using rule 9 (e_import_spec_list)

    import_spec  go to state 39


State 21

   12 import_spec_list: import_spec . ';'

    ';'  shift, and go to state 40


State 22

   14 import_spec: '.' STRING_LIT .

    $default  reduce using rule 14 (import_spec)


State 23

   65 const_decl: CONST . const_spec
   66           | CONST . '(' const_spec_list ')'

    ID   shift, and go to state 41
    '('  shift, and go to state 42

    const_spec  go to state 43
    id_list     go to state 44


State 24

   26 func_decl: FUNC . ID signature
   27          | FUNC . ID signature block

    ID  shift, and go to state 45


State 25

   72 var_decl: VAR . var_spec
   73         | VAR . '(' var_spec_list ')'

    ID   shift, and go to state 41
    '('  shift, and go to state 46

    var_spec  go to state 47
    id_list   go to state 48


State 26

  153 class_decl: CLASS . ID class_inherit_opt '{' class_body_opt '}'

    ID  shift, and go to state 49


State 27

  163 enum_decl: ENUM . ID '{' enum_member_list '}'
  164          | ENUM . ID '{' enum_member_list ',' '}'

    ID  shift, and go to state 50


State 28

    1 program: module_clause ';' e_import_decl_list ';' e_top_level_decl_list .

    $default  reduce using rule 1 (program)


State 29

   16 e_top_level_decl_list: top_level_decl_list .
   18 top_level_decl_list: top_level_decl_list . top_level_decl ';'

    CONST  shift, and go to state 23
    FUNC   shift, and go to state 24
    VAR    shift, and go to state 25
    CLASS  shift, and go to state 26
    ENUM   shift, and go to state 27

    $default  reduce using rule 16 (e_top_level_decl_list)

    top_level_decl  go to state 51
    decl            go to state 31
    func_decl       go to state 32
    const_decl      go to state 33
    var_decl        go to state 34
    class_decl      go to state 35
    enum_decl       go to state 36


State 30

   19 top_level_decl_list: top_level_decl . ';'

    ';'  shift, and go to state 52


State 31

   20 top_level_decl: decl .

    $default  reduce using rule 20 (top_level_decl)


State 32

   21 top_level_decl: func_decl .

    $default  reduce using rule 21 (top_level_decl)


State 33

   24 decl: const_decl .

    $default  reduce using rule 24 (decl)


State 34

   25 decl: var_decl .

    $default  reduce using rule 25 (decl)


State 35

   22 top_level_decl: class_decl .

    $default  reduce using rule 22 (top_level_decl)


State 36

   23 top_level_decl: enum_decl .

    $default  reduce using rule 23 (top_level_decl)


State 37

    5 import_decl_list: import_decl_list import_decl ';' .

    $default  reduce using rule 5 (import_decl_list)


State 38

    8 import_decl: IMPORT '(' e_import_spec_list ')' .

    $default  reduce using rule 8 (import_decl)


State 39

   11 import_spec_list: import_spec_list import_spec . ';'

    ';'  shift, and go to state 53


State 40

   12 import_spec_list: import_spec ';' .

    $default  reduce using rule 12 (import_spec_list)


State 41

   80 id_list: ID .

    $default  reduce using rule 80 (id_list)


State 42

   66 const_decl: CONST '(' . const_spec_list ')'

    ID  shift, and go to state 41

    const_spec_list  go to state 54
    const_spec       go to state 55
    id_list          go to state 44


State 43

   65 const_decl: CONST const_spec .

    $default  reduce using rule 65 (const_decl)


State 44

   69 const_spec: id_list .
   70           | id_list . '=' expr_list
   71           | id_list . type '=' expr_list
   79 id_list: id_list . ',' ID

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 65
    '='     shift, and go to state 66
    ','     shift, and go to state 67
    '['     shift, and go to state 68

    $default  reduce using rule 69 (const_spec)

    type        go to state 69
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 45

   26 func_decl: FUNC ID . signature
   27          | FUNC ID . signature block

    '('  shift, and go to state 75

    signature  go to state 76
    params     go to state 77


State 46

   73 var_decl: VAR '(' . var_spec_list ')'

    ID  shift, and go to state 41

    var_spec_list  go to state 78
    var_spec       go to state 79
    id_list        go to state 48


State 47

   72 var_decl: VAR var_spec .

    $default  reduce using rule 72 (var_decl)


State 48

   76 var_spec: id_list . type
   77         | id_list . type '=' expr_list
   78         | id_list . '=' expr_list
   79 id_list: id_list . ',' ID

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 65
    '='     shift, and go to state 80
    ','     shift, and go to state 67
    '['     shift, and go to state 68

    type        go to state 81
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 49

  153 class_decl: CLASS ID . class_inherit_opt '{' class_body_opt '}'

    ':'  shift, and go to state 82

    $default  reduce using rule 155 (class_inherit_opt)

    class_inherit_opt  go to state 83


State 50

  163 enum_decl: ENUM ID . '{' enum_member_list '}'
  164          | ENUM ID . '{' enum_member_list ',' '}'

    '{'  shift, and go to state 84


State 51

   18 top_level_decl_list: top_level_decl_list top_level_decl . ';'

    ';'  shift, and go to state 85


State 52

   19 top_level_decl_list: top_level_decl ';' .

    $default  reduce using rule 19 (top_level_decl_list)


State 53

   11 import_spec_list: import_spec_list import_spec ';' .

    $default  reduce using rule 11 (import_spec_list)


State 54

   66 const_decl: CONST '(' const_spec_list . ')'
   67 const_spec_list: const_spec_list . ';' const_spec

    ';'  shift, and go to state 86
    ')'  shift, and go to state 87


State 55

   68 const_spec_list: const_spec . ';'

    ';'  shift, and go to state 88


State 56

   99 func_type: FUNC . signature

    '('  shift, and go to state 75

    signature  go to state 89
    params     go to state 77


State 57

   84 type_name: INT .

    $default  reduce using rule 84 (type_name)


State 58

   85 type_name: FLOAT .

    $default  reduce using rule 85 (type_name)


State 59

   86 type_name: DOUBLE .

    $default  reduce using rule 86 (type_name)


State 60

   87 type_name: REAL .

    $default  reduce using rule 87 (type_name)


State 61

   88 type_name: BOOL .

    $default  reduce using rule 88 (type_name)


State 62

   89 type_name: CHAR .

    $default  reduce using rule 89 (type_name)


State 63

   90 type_name: STRING .

    $default  reduce using rule 90 (type_name)


State 64

   91 type_name: VOID .

    $default  reduce using rule 91 (type_name)


State 65

   92 type_name: ID .

    $default  reduce using rule 92 (type_name)


State 66

   70 const_spec: id_list '=' . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 100
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 67

   79 id_list: id_list ',' . ID

    ID  shift, and go to state 105


State 68

   98 array_type: '[' . expr ']' type
  100 slice_type: '[' . ']' type

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    ']'         shift, and go to state 106

    expr          go to state 107
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 69

   71 const_spec: id_list type . '=' expr_list

    '='  shift, and go to state 108


State 70

   81 type: type_name .
   82     | type_name . '[' type_list ']'

    '['  shift, and go to state 109

    $default  reduce using rule 81 (type)


State 71

   83 type: type_lit .

    $default  reduce using rule 83 (type)


State 72

   95 type_lit: array_type .

    $default  reduce using rule 95 (type_lit)


State 73

   96 type_lit: func_type .

    $default  reduce using rule 96 (type_lit)


State 74

   97 type_lit: slice_type .

    $default  reduce using rule 97 (type_lit)


State 75

   30 params: '(' . param_list ')'
   31       | '(' . ')'

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 110
    ')'     shift, and go to state 111
    '['     shift, and go to state 68

    param_list  go to state 112
    param_decl  go to state 113
    id_list     go to state 114
    type        go to state 115
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 76

   26 func_decl: FUNC ID signature .
   27          | FUNC ID signature . block

    '{'  shift, and go to state 116

    $default  reduce using rule 26 (func_decl)

    block  go to state 117


State 77

   28 signature: params . results
   29          | params .

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 65
    '('     shift, and go to state 75
    '['     shift, and go to state 68

    FUNC      [reduce using rule 29 (signature)]
    ID        [reduce using rule 29 (signature)]
    $default  reduce using rule 29 (signature)

    params      go to state 118
    results     go to state 119
    type        go to state 120
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 78

   73 var_decl: VAR '(' var_spec_list . ')'
   74 var_spec_list: var_spec_list . ';' var_spec

    ';'  shift, and go to state 121
    ')'  shift, and go to state 122


State 79

   75 var_spec_list: var_spec . ';'

    ';'  shift, and go to state 123


State 80

   78 var_spec: id_list '=' . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 124
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 81

   76 var_spec: id_list type .
   77         | id_list type . '=' expr_list

    '='  shift, and go to state 125

    $default  reduce using rule 76 (var_spec)


State 82

  154 class_inherit_opt: ':' . ID

    ID  shift, and go to state 126


State 83

  153 class_decl: CLASS ID class_inherit_opt . '{' class_body_opt '}'

    '{'  shift, and go to state 127


State 84

  163 enum_decl: ENUM ID '{' . enum_member_list '}'
  164          | ENUM ID '{' . enum_member_list ',' '}'

    ID  shift, and go to state 128

    enum_member_list  go to state 129
    enum_member       go to state 130


State 85

   18 top_level_decl_list: top_level_decl_list top_level_decl ';' .

    $default  reduce using rule 18 (top_level_decl_list)


State 86

   67 const_spec_list: const_spec_list ';' . const_spec

    ID  shift, and go to state 41

    const_spec  go to state 131
    id_list     go to state 44


State 87

   66 const_decl: CONST '(' const_spec_list ')' .

    $default  reduce using rule 66 (const_decl)


State 88

   68 const_spec_list: const_spec ';' .

    $default  reduce using rule 68 (const_spec_list)


State 89

   99 func_type: FUNC signature .

    $default  reduce using rule 99 (func_type)


State 90

  134 operand_name: THIS .

    $default  reduce using rule 134 (operand_name)


State 91

  135 operand_name: SUPER .

    $default  reduce using rule 135 (operand_name)


State 92

  104 expr: INT_LIT .

    $default  reduce using rule 104 (expr)


State 93

  105 expr: FLOAT_LIT .

    $default  reduce using rule 105 (expr)


State 94

  107 expr: BOOL_LIT .

    $default  reduce using rule 107 (expr)


State 95

  133 operand_name: ID .

    $default  reduce using rule 133 (operand_name)


State 96

  106 expr: STRING_LIT .

    $default  reduce using rule 106 (expr)


State 97

  121 expr: '-' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 132
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 98

  120 expr: '!' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 133
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 99

  132 operand: '(' . expr ')'

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 134
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 100

   70 const_spec: id_list '=' expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 70 (const_spec)


State 101

  102 expr_list: expr .
  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147

    $default  reduce using rule 102 (expr_list)


State 102

  103 expr: primary_expr .
  123 primary_expr: primary_expr . '[' expr ']'
  124             | primary_expr . '[' ':' ']'
  125             | primary_expr . '[' expr ':' ']'
  126             | primary_expr . '[' ':' expr ']'
  127             | primary_expr . '[' expr ':' expr ']'
  128             | primary_expr . '[' ':' expr ':' expr ']'
  129             | primary_expr . '[' expr ':' expr ':' expr ']'

    '['  shift, and go to state 148

    $default  reduce using rule 103 (expr)


State 103

  122 primary_expr: operand .

    $default  reduce using rule 122 (primary_expr)


State 104

  130 operand: operand_name .
  131        | operand_name . '[' type_list ']'

    '['  shift, and go to state 149

    '['       [reduce using rule 130 (operand)]
    $default  reduce using rule 130 (operand)


State 105

   79 id_list: id_list ',' ID .

    $default  reduce using rule 79 (id_list)


State 106

  100 slice_type: '[' ']' . type

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 65
    '['     shift, and go to state 68

    type        go to state 150
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 107

   98 array_type: '[' expr . ']' type
  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ']'     shift, and go to state 151


State 108

   71 const_spec: id_list type '=' . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 152
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 109

   82 type: type_name '[' . type_list ']'

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 65
    '['     shift, and go to state 68

    type        go to state 153
    type_name   go to state 70
    type_list   go to state 154
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 110

   80 id_list: ID .
   92 type_name: ID .

    ')'       reduce using rule 92 (type_name)
    ','       reduce using rule 80 (id_list)
    ','       [reduce using rule 92 (type_name)]
    '['       reduce using rule 80 (id_list)
    '['       [reduce using rule 92 (type_name)]
    $default  reduce using rule 80 (id_list)


State 111

   31 params: '(' ')' .

    $default  reduce using rule 31 (params)


State 112

   30 params: '(' param_list . ')'
   32 param_list: param_list . ',' param_decl

    ')'  shift, and go to state 155
    ','  shift, and go to state 156


State 113

   33 param_list: param_decl .

    $default  reduce using rule 33 (param_list)


State 114

   34 param_decl: id_list . type
   79 id_list: id_list . ',' ID

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 65
    ','     shift, and go to state 67
    '['     shift, and go to state 68

    type        go to state 157
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 115

   35 param_decl: type .

    $default  reduce using rule 35 (param_decl)


State 116

   38 block: '{' . stmt_list '}'
   39      | '{' . '}'

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 158
    BREAK       shift, and go to state 159
    CONTINUE    shift, and go to state 160
    IF          shift, and go to state 161
    SWITCH      shift, and go to state 162
    DO          shift, and go to state 163
    WHILE       shift, and go to state 164
    FOR         shift, and go to state 165
    FOREACH     shift, and go to state 166
    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 167
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    '{'         shift, and go to state 116
    '}'         shift, and go to state 168

    decl           go to state 169
    block          go to state 170
    stmt_list      go to state 171
    stmt           go to state 172
    simple_stmt    go to state 173
    return_stmt    go to state 174
    const_decl     go to state 33
    var_decl       go to state 34
    id_list        go to state 175
    expr_list      go to state 176
    expr           go to state 177
    primary_expr   go to state 102
    operand        go to state 103
    operand_name   go to state 104
    if_stmt        go to state 178
    switch_stmt    go to state 179
    for_stmt       go to state 180
    while_stmt     go to state 181
    do_while_stmt  go to state 182
    foreach_stmt   go to state 183


State 117

   27 func_decl: FUNC ID signature block .

    $default  reduce using rule 27 (func_decl)


State 118

   36 results: params .

    $default  reduce using rule 36 (results)


State 119

   28 signature: params results .

    $default  reduce using rule 28 (signature)


State 120

   37 results: type .

    $default  reduce using rule 37 (results)


State 121

   74 var_spec_list: var_spec_list ';' . var_spec

    ID  shift, and go to state 41

    var_spec  go to state 184
    id_list   go to state 48


State 122

   73 var_decl: VAR '(' var_spec_list ')' .

    $default  reduce using rule 73 (var_decl)


State 123

   75 var_spec_list: var_spec ';' .

    $default  reduce using rule 75 (var_spec_list)


State 124

   78 var_spec: id_list '=' expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 78 (var_spec)


State 125

   77 var_spec: id_list type '=' . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 185
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 126

  154 class_inherit_opt: ':' ID .

    $default  reduce using rule 154 (class_inherit_opt)


State 127

  153 class_decl: CLASS ID class_inherit_opt '{' . class_body_opt '}'

    CONST     shift, and go to state 23
    FUNC      shift, and go to state 24
    VAR       shift, and go to state 25
    OVERRIDE  shift, and go to state 186

    $default  reduce using rule 157 (class_body_opt)

    decl            go to state 187
    func_decl       go to state 188
    const_decl      go to state 33
    var_decl        go to state 34
    class_body_opt  go to state 189
    class_body      go to state 190
    class_member    go to state 191


State 128

  167 enum_member: ID .
  168            | ID . '=' expr

    '='  shift, and go to state 192

    $default  reduce using rule 167 (enum_member)


State 129

  163 enum_decl: ENUM ID '{' enum_member_list . '}'
  164          | ENUM ID '{' enum_member_list . ',' '}'
  165 enum_member_list: enum_member_list . ',' enum_member

    ','  shift, and go to state 193
    '}'  shift, and go to state 194


State 130

  166 enum_member_list: enum_member .

    $default  reduce using rule 166 (enum_member_list)


State 131

   67 const_spec_list: const_spec_list ';' const_spec .

    $default  reduce using rule 67 (const_spec_list)


State 132

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  121     | '-' expr .

    $default  reduce using rule 121 (expr)


State 133

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  120     | '!' expr .

    $default  reduce using rule 120 (expr)


State 134

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  132 operand: '(' expr . ')'

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ')'     shift, and go to state 195


State 135

  101 expr_list: expr_list ',' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 196
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 136

  112 expr: expr EQ . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 197
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 137

  113 expr: expr NE . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 198
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 138

  116 expr: expr LE . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 199
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 139

  117 expr: expr GE . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 200
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 140

  118 expr: expr AND_OP . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 201
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 141

  119 expr: expr OR_OP . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 202
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 142

  114 expr: expr '<' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 203
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 143

  115 expr: expr '>' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 204
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 144

  108 expr: expr '+' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 205
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 145

  109 expr: expr '-' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 206
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 146

  110 expr: expr '*' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 207
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 147

  111 expr: expr '/' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 208
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 148

  123 primary_expr: primary_expr '[' . expr ']'
  124             | primary_expr '[' . ':' ']'
  125             | primary_expr '[' . expr ':' ']'
  126             | primary_expr '[' . ':' expr ']'
  127             | primary_expr '[' . expr ':' expr ']'
  128             | primary_expr '[' . ':' expr ':' expr ']'
  129             | primary_expr '[' . expr ':' expr ':' expr ']'

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    ':'         shift, and go to state 209

    expr          go to state 210
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 149

  131 operand: operand_name '[' . type_list ']'

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 65
    '['     shift, and go to state 68

    type        go to state 153
    type_name   go to state 70
    type_list   go to state 211
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 150

  100 slice_type: '[' ']' type .

    $default  reduce using rule 100 (slice_type)


State 151

   98 array_type: '[' expr ']' . type

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 65
    '['     shift, and go to state 68

    type        go to state 212
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 152

   71 const_spec: id_list type '=' expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 71 (const_spec)


State 153

   94 type_list: type .

    $default  reduce using rule 94 (type_list)


State 154

   82 type: type_name '[' type_list . ']'
   93 type_list: type_list . ',' type

    ','  shift, and go to state 213
    ']'  shift, and go to state 214


State 155

   30 params: '(' param_list ')' .

    $default  reduce using rule 30 (params)


State 156

   32 param_list: param_list ',' . param_decl

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 110
    '['     shift, and go to state 68

    param_decl  go to state 215
    id_list     go to state 114
    type        go to state 115
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 157

   34 param_decl: id_list type .

    $default  reduce using rule 34 (param_decl)


State 158

   63 return_stmt: RETURN .
   64            | RETURN . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    $default  reduce using rule 63 (return_stmt)

    expr_list     go to state 216
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 159

   45 stmt: BREAK .

    $default  reduce using rule 45 (stmt)


State 160

   46 stmt: CONTINUE .

    $default  reduce using rule 46 (stmt)


State 161

  136 if_stmt: IF . '(' expr ')' block
  137        | IF . '(' expr ')' block ELSE block
  138        | IF . '(' expr ')' block ELSE if_stmt

    '('  shift, and go to state 217


State 162

  139 switch_stmt: SWITCH . '(' expr ')' '{' case_list '}'
  140            | SWITCH . '{' case_list '}'

    '('  shift, and go to state 218
    '{'  shift, and go to state 219


State 163

  150 do_while_stmt: DO . block WHILE '(' expr ')' ';'

    '{'  shift, and go to state 116

    block  go to state 220


State 164

  149 while_stmt: WHILE . '(' expr ')' block

    '('  shift, and go to state 221


State 165

  145 for_stmt: FOR . '(' simple_stmt ';' expr ';' simple_stmt ')' block
  146         | FOR . '(' ';' expr ';' ')' block
  147         | FOR . '(' ';' ';' ')' block
  148         | FOR . expr block

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 222

    expr          go to state 223
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 166

  151 foreach_stmt: FOREACH . '(' ID ':' expr ')' block
  152             | FOREACH . '(' type ID ':' expr ')' block

    '('  shift, and go to state 224


State 167

   80 id_list: ID .
  133 operand_name: ID .

    PLUS_ASSIGN   reduce using rule 80 (id_list)
    MINUS_ASSIGN  reduce using rule 80 (id_list)
    MUL_ASSIGN    reduce using rule 80 (id_list)
    DIV_ASSIGN    reduce using rule 80 (id_list)
    TILDE_ASSIGN  reduce using rule 80 (id_list)
    ','           reduce using rule 80 (id_list)
    ','           [reduce using rule 133 (operand_name)]
    $default      reduce using rule 133 (operand_name)


State 168

   39 block: '{' '}' .

    $default  reduce using rule 39 (block)


State 169

   42 stmt: decl .

    $default  reduce using rule 42 (stmt)


State 170

   47 stmt: block .

    $default  reduce using rule 47 (stmt)


State 171

   38 block: '{' stmt_list . '}'
   40 stmt_list: stmt_list . stmt ';'

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 158
    BREAK       shift, and go to state 159
    CONTINUE    shift, and go to state 160
    IF          shift, and go to state 161
    SWITCH      shift, and go to state 162
    DO          shift, and go to state 163
    WHILE       shift, and go to state 164
    FOR         shift, and go to state 165
    FOREACH     shift, and go to state 166
    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 167
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    '{'         shift, and go to state 116
    '}'         shift, and go to state 225

    decl           go to state 169
    block          go to state 170
    stmt           go to state 226
    simple_stmt    go to state 173
    return_stmt    go to state 174
    const_decl     go to state 33
    var_decl       go to state 34
    id_list        go to state 175
    expr_list      go to state 176
    expr           go to state 177
    primary_expr   go to state 102
    operand        go to state 103
    operand_name   go to state 104
    if_stmt        go to state 178
    switch_stmt    go to state 179
    for_stmt       go to state 180
    while_stmt     go to state 181
    do_while_stmt  go to state 182
    foreach_stmt   go to state 183


State 172

   41 stmt_list: stmt . ';'

    ';'  shift, and go to state 227


State 173

   43 stmt: simple_stmt .

    $default  reduce using rule 43 (stmt)


State 174

   44 stmt: return_stmt .

    $default  reduce using rule 44 (stmt)


State 175

   58 simple_stmt: id_list . PLUS_ASSIGN expr_list
   59            | id_list . MINUS_ASSIGN expr_list
   60            | id_list . MUL_ASSIGN expr_list
   61            | id_list . DIV_ASSIGN expr_list
   62            | id_list . TILDE_ASSIGN expr_list
   79 id_list: id_list . ',' ID

    PLUS_ASSIGN   shift, and go to state 228
    MINUS_ASSIGN  shift, and go to state 229
    MUL_ASSIGN    shift, and go to state 230
    DIV_ASSIGN    shift, and go to state 231
    TILDE_ASSIGN  shift, and go to state 232
    ','           shift, and go to state 67


State 176

   57 simple_stmt: expr_list . '=' expr_list
  101 expr_list: expr_list . ',' expr

    '='  shift, and go to state 233
    ','  shift, and go to state 135


State 177

   54 simple_stmt: expr .
   55            | expr . INC
   56            | expr . DEC
  102 expr_list: expr .
  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    INC     shift, and go to state 234
    DEC     shift, and go to state 235
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147

    '='       reduce using rule 102 (expr_list)
    ','       reduce using rule 102 (expr_list)
    $default  reduce using rule 54 (simple_stmt)


State 178

   48 stmt: if_stmt .

    $default  reduce using rule 48 (stmt)


State 179

   49 stmt: switch_stmt .

    $default  reduce using rule 49 (stmt)


State 180

   50 stmt: for_stmt .

    $default  reduce using rule 50 (stmt)


State 181

   51 stmt: while_stmt .

    $default  reduce using rule 51 (stmt)


State 182

   52 stmt: do_while_stmt .

    $default  reduce using rule 52 (stmt)


State 183

   53 stmt: foreach_stmt .

    $default  reduce using rule 53 (stmt)


State 184

   74 var_spec_list: var_spec_list ';' var_spec .

    $default  reduce using rule 74 (var_spec_list)


State 185

   77 var_spec: id_list type '=' expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 77 (var_spec)


State 186

  162 class_member: OVERRIDE . func_decl

    FUNC  shift, and go to state 24

    func_decl  go to state 236


State 187

  160 class_member: decl . ';'

    ';'  shift, and go to state 237


State 188

  161 class_member: func_decl .

    $default  reduce using rule 161 (class_member)


State 189

  153 class_decl: CLASS ID class_inherit_opt '{' class_body_opt . '}'

    '}'  shift, and go to state 238


State 190

  156 class_body_opt: class_body .
  158 class_body: class_body . class_member

    CONST     shift, and go to state 23
    FUNC      shift, and go to state 24
    VAR       shift, and go to state 25
    OVERRIDE  shift, and go to state 186

    $default  reduce using rule 156 (class_body_opt)

    decl          go to state 187
    func_decl     go to state 188
    const_decl    go to state 33
    var_decl      go to state 34
    class_member  go to state 239


State 191

  159 class_body: class_member .

    $default  reduce using rule 159 (class_body)


State 192

  168 enum_member: ID '=' . expr

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 240
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 193

  164 enum_decl: ENUM ID '{' enum_member_list ',' . '}'
  165 enum_member_list: enum_member_list ',' . enum_member

    ID   shift, and go to state 128
    '}'  shift, and go to state 241

    enum_member  go to state 242


State 194

  163 enum_decl: ENUM ID '{' enum_member_list '}' .

    $default  reduce using rule 163 (enum_decl)


State 195

  132 operand: '(' expr ')' .

    $default  reduce using rule 132 (operand)


State 196

  101 expr_list: expr_list ',' expr .
  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147

    $default  reduce using rule 101 (expr_list)


State 197

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  112     | expr EQ expr .
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145
    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 112 (expr)


State 198

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  113     | expr NE expr .
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145
    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 113 (expr)


State 199

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  116     | expr LE expr .
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145
    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 116 (expr)


State 200

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  117     | expr GE expr .
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145
    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 117 (expr)


State 201

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  118     | expr AND_OP expr .
  119     | expr . OR_OP expr

    EQ   shift, and go to state 136
    NE   shift, and go to state 137
    LE   shift, and go to state 138
    GE   shift, and go to state 139
    '<'  shift, and go to state 142
    '>'  shift, and go to state 143
    '+'  shift, and go to state 144
    '-'  shift, and go to state 145
    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 118 (expr)


State 202

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  119     | expr OR_OP expr .

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147

    $default  reduce using rule 119 (expr)


State 203

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  114     | expr '<' expr .
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145
    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 114 (expr)


State 204

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  115     | expr '>' expr .
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145
    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 115 (expr)


State 205

  108 expr: expr . '+' expr
  108     | expr '+' expr .
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 108 (expr)


State 206

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  109     | expr '-' expr .
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 109 (expr)


State 207

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  110     | expr '*' expr .
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    $default  reduce using rule 110 (expr)


State 208

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  111     | expr '/' expr .
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr

    $default  reduce using rule 111 (expr)


State 209

  124 primary_expr: primary_expr '[' ':' . ']'
  126             | primary_expr '[' ':' . expr ']'
  128             | primary_expr '[' ':' . expr ':' expr ']'

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    ']'         shift, and go to state 243

    expr          go to state 244
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 210

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  123 primary_expr: primary_expr '[' expr . ']'
  125             | primary_expr '[' expr . ':' ']'
  127             | primary_expr '[' expr . ':' expr ']'
  129             | primary_expr '[' expr . ':' expr ':' expr ']'

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ']'     shift, and go to state 245
    ':'     shift, and go to state 246


State 211

   93 type_list: type_list . ',' type
  131 operand: operand_name '[' type_list . ']'

    ','  shift, and go to state 213
    ']'  shift, and go to state 247


State 212

   98 array_type: '[' expr ']' type .

    $default  reduce using rule 98 (array_type)


State 213

   93 type_list: type_list ',' . type

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 65
    '['     shift, and go to state 68

    type        go to state 248
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 214

   82 type: type_name '[' type_list ']' .

    $default  reduce using rule 82 (type)


State 215

   32 param_list: param_list ',' param_decl .

    $default  reduce using rule 32 (param_list)


State 216

   64 return_stmt: RETURN expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 64 (return_stmt)


State 217

  136 if_stmt: IF '(' . expr ')' block
  137        | IF '(' . expr ')' block ELSE block
  138        | IF '(' . expr ')' block ELSE if_stmt

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 249
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 218

  139 switch_stmt: SWITCH '(' . expr ')' '{' case_list '}'

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 250
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 219

  140 switch_stmt: SWITCH '{' . case_list '}'

    CASE     shift, and go to state 251
    DEFAULT  shift, and go to state 252

    case_list  go to state 253
    case_item  go to state 254


State 220

  150 do_while_stmt: DO block . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 255


State 221

  149 while_stmt: WHILE '(' . expr ')' block

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 256
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 222

  132 operand: '(' . expr ')'
  145 for_stmt: FOR '(' . simple_stmt ';' expr ';' simple_stmt ')' block
  146         | FOR '(' . ';' expr ';' ')' block
  147         | FOR '(' . ';' ';' ')' block

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 167
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    ';'         shift, and go to state 257
    '('         shift, and go to state 99

    simple_stmt   go to state 258
    id_list       go to state 175
    expr_list     go to state 176
    expr          go to state 259
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 223

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  148 for_stmt: FOR expr . block

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    '{'     shift, and go to state 116

    block  go to state 260


State 224

  151 foreach_stmt: FOREACH '(' . ID ':' expr ')' block
  152             | FOREACH '(' . type ID ':' expr ')' block

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 261
    '['     shift, and go to state 68

    type        go to state 262
    type_name   go to state 70
    type_lit    go to state 71
    array_type  go to state 72
    func_type   go to state 73
    slice_type  go to state 74


State 225

   38 block: '{' stmt_list '}' .

    $default  reduce using rule 38 (block)


State 226

   40 stmt_list: stmt_list stmt . ';'

    ';'  shift, and go to state 263


State 227

   41 stmt_list: stmt ';' .

    $default  reduce using rule 41 (stmt_list)


State 228

   58 simple_stmt: id_list PLUS_ASSIGN . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 264
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 229

   59 simple_stmt: id_list MINUS_ASSIGN . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 265
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 230

   60 simple_stmt: id_list MUL_ASSIGN . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 266
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 231

   61 simple_stmt: id_list DIV_ASSIGN . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 267
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 232

   62 simple_stmt: id_list TILDE_ASSIGN . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 268
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 233

   57 simple_stmt: expr_list '=' . expr_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr_list     go to state 269
    expr          go to state 101
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 234

   55 simple_stmt: expr INC .

    $default  reduce using rule 55 (simple_stmt)


State 235

   56 simple_stmt: expr DEC .

    $default  reduce using rule 56 (simple_stmt)


State 236

  162 class_member: OVERRIDE func_decl .

    $default  reduce using rule 162 (class_member)


State 237

  160 class_member: decl ';' .

    $default  reduce using rule 160 (class_member)


State 238

  153 class_decl: CLASS ID class_inherit_opt '{' class_body_opt '}' .

    $default  reduce using rule 153 (class_decl)


State 239

  158 class_body: class_body class_member .

    $default  reduce using rule 158 (class_body)


State 240

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  168 enum_member: ID '=' expr .

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147

    $default  reduce using rule 168 (enum_member)


State 241

  164 enum_decl: ENUM ID '{' enum_member_list ',' '}' .

    $default  reduce using rule 164 (enum_decl)


State 242

  165 enum_member_list: enum_member_list ',' enum_member .

    $default  reduce using rule 165 (enum_member_list)


State 243

  124 primary_expr: primary_expr '[' ':' ']' .

    $default  reduce using rule 124 (primary_expr)


State 244

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  126 primary_expr: primary_expr '[' ':' expr . ']'
  128             | primary_expr '[' ':' expr . ':' expr ']'

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ']'     shift, and go to state 270
    ':'     shift, and go to state 271


State 245

  123 primary_expr: primary_expr '[' expr ']' .

    $default  reduce using rule 123 (primary_expr)


State 246

  125 primary_expr: primary_expr '[' expr ':' . ']'
  127             | primary_expr '[' expr ':' . expr ']'
  129             | primary_expr '[' expr ':' . expr ':' expr ']'

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    ']'         shift, and go to state 272

    expr          go to state 273
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 247

  131 operand: operand_name '[' type_list ']' .

    $default  reduce using rule 131 (operand)


State 248

   93 type_list: type_list ',' type .

    $default  reduce using rule 93 (type_list)


State 249

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  136 if_stmt: IF '(' expr . ')' block
  137        | IF '(' expr . ')' block ELSE block
  138        | IF '(' expr . ')' block ELSE if_stmt

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ')'     shift, and go to state 274


State 250

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  139 switch_stmt: SWITCH '(' expr . ')' '{' case_list '}'

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ')'     shift, and go to state 275


State 251

  143 case_item: CASE . expr ':' stmt_list

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 276
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 252

  144 case_item: DEFAULT . ':' stmt_list

    ':'  shift, and go to state 277


State 253

  140 switch_stmt: SWITCH '{' case_list . '}'
  141 case_list: case_list . case_item

    CASE     shift, and go to state 251
    DEFAULT  shift, and go to state 252
    '}'      shift, and go to state 278

    case_item  go to state 279


State 254

  142 case_list: case_item .

    $default  reduce using rule 142 (case_list)


State 255

  150 do_while_stmt: DO block WHILE . '(' expr ')' ';'

    '('  shift, and go to state 280


State 256

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  149 while_stmt: WHILE '(' expr . ')' block

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ')'     shift, and go to state 281


State 257

  146 for_stmt: FOR '(' ';' . expr ';' ')' block
  147         | FOR '(' ';' . ';' ')' block

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    ';'         shift, and go to state 282
    '('         shift, and go to state 99

    expr          go to state 283
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 258

  145 for_stmt: FOR '(' simple_stmt . ';' expr ';' simple_stmt ')' block

    ';'  shift, and go to state 284


State 259

   54 simple_stmt: expr .
   55            | expr . INC
   56            | expr . DEC
  102 expr_list: expr .
  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  132 operand: '(' expr . ')'

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    INC     shift, and go to state 234
    DEC     shift, and go to state 235
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ')'     shift, and go to state 195

    ';'       reduce using rule 54 (simple_stmt)
    $default  reduce using rule 102 (expr_list)


State 260

  148 for_stmt: FOR expr block .

    $default  reduce using rule 148 (for_stmt)


State 261

   92 type_name: ID .
  151 foreach_stmt: FOREACH '(' ID . ':' expr ')' block

    ':'  shift, and go to state 285

    $default  reduce using rule 92 (type_name)


State 262

  152 foreach_stmt: FOREACH '(' type . ID ':' expr ')' block

    ID  shift, and go to state 286


State 263

   40 stmt_list: stmt_list stmt ';' .

    $default  reduce using rule 40 (stmt_list)


State 264

   58 simple_stmt: id_list PLUS_ASSIGN expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 58 (simple_stmt)


State 265

   59 simple_stmt: id_list MINUS_ASSIGN expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 59 (simple_stmt)


State 266

   60 simple_stmt: id_list MUL_ASSIGN expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 60 (simple_stmt)


State 267

   61 simple_stmt: id_list DIV_ASSIGN expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 61 (simple_stmt)


State 268

   62 simple_stmt: id_list TILDE_ASSIGN expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 62 (simple_stmt)


State 269

   57 simple_stmt: expr_list '=' expr_list .
  101 expr_list: expr_list . ',' expr

    ','  shift, and go to state 135

    $default  reduce using rule 57 (simple_stmt)


State 270

  126 primary_expr: primary_expr '[' ':' expr ']' .

    $default  reduce using rule 126 (primary_expr)


State 271

  128 primary_expr: primary_expr '[' ':' expr ':' . expr ']'

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 287
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 272

  125 primary_expr: primary_expr '[' expr ':' ']' .

    $default  reduce using rule 125 (primary_expr)


State 273

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  127 primary_expr: primary_expr '[' expr ':' expr . ']'
  129             | primary_expr '[' expr ':' expr . ':' expr ']'

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ']'     shift, and go to state 288
    ':'     shift, and go to state 289


State 274

  136 if_stmt: IF '(' expr ')' . block
  137        | IF '(' expr ')' . block ELSE block
  138        | IF '(' expr ')' . block ELSE if_stmt

    '{'  shift, and go to state 116

    block  go to state 290


State 275

  139 switch_stmt: SWITCH '(' expr ')' . '{' case_list '}'

    '{'  shift, and go to state 291


State 276

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  143 case_item: CASE expr . ':' stmt_list

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ':'     shift, and go to state 292


State 277

  144 case_item: DEFAULT ':' . stmt_list

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 158
    BREAK       shift, and go to state 159
    CONTINUE    shift, and go to state 160
    IF          shift, and go to state 161
    SWITCH      shift, and go to state 162
    DO          shift, and go to state 163
    WHILE       shift, and go to state 164
    FOR         shift, and go to state 165
    FOREACH     shift, and go to state 166
    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 167
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    '{'         shift, and go to state 116

    decl           go to state 169
    block          go to state 170
    stmt_list      go to state 293
    stmt           go to state 172
    simple_stmt    go to state 173
    return_stmt    go to state 174
    const_decl     go to state 33
    var_decl       go to state 34
    id_list        go to state 175
    expr_list      go to state 176
    expr           go to state 177
    primary_expr   go to state 102
    operand        go to state 103
    operand_name   go to state 104
    if_stmt        go to state 178
    switch_stmt    go to state 179
    for_stmt       go to state 180
    while_stmt     go to state 181
    do_while_stmt  go to state 182
    foreach_stmt   go to state 183


State 278

  140 switch_stmt: SWITCH '{' case_list '}' .

    $default  reduce using rule 140 (switch_stmt)


State 279

  141 case_list: case_list case_item .

    $default  reduce using rule 141 (case_list)


State 280

  150 do_while_stmt: DO block WHILE '(' . expr ')' ';'

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 294
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 281

  149 while_stmt: WHILE '(' expr ')' . block

    '{'  shift, and go to state 116

    block  go to state 295


State 282

  147 for_stmt: FOR '(' ';' ';' . ')' block

    ')'  shift, and go to state 296


State 283

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  146 for_stmt: FOR '(' ';' expr . ';' ')' block

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ';'     shift, and go to state 297


State 284

  145 for_stmt: FOR '(' simple_stmt ';' . expr ';' simple_stmt ')' block

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 298
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 285

  151 foreach_stmt: FOREACH '(' ID ':' . expr ')' block

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 299
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 286

  152 foreach_stmt: FOREACH '(' type ID . ':' expr ')' block

    ':'  shift, and go to state 300


State 287

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  128 primary_expr: primary_expr '[' ':' expr ':' expr . ']'

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ']'     shift, and go to state 301


State 288

  127 primary_expr: primary_expr '[' expr ':' expr ']' .

    $default  reduce using rule 127 (primary_expr)


State 289

  129 primary_expr: primary_expr '[' expr ':' expr ':' . expr ']'

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 302
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 290

  136 if_stmt: IF '(' expr ')' block .
  137        | IF '(' expr ')' block . ELSE block
  138        | IF '(' expr ')' block . ELSE if_stmt

    ELSE  shift, and go to state 303

    $default  reduce using rule 136 (if_stmt)


State 291

  139 switch_stmt: SWITCH '(' expr ')' '{' . case_list '}'

    CASE     shift, and go to state 251
    DEFAULT  shift, and go to state 252

    case_list  go to state 304
    case_item  go to state 254


State 292

  143 case_item: CASE expr ':' . stmt_list

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 158
    BREAK       shift, and go to state 159
    CONTINUE    shift, and go to state 160
    IF          shift, and go to state 161
    SWITCH      shift, and go to state 162
    DO          shift, and go to state 163
    WHILE       shift, and go to state 164
    FOR         shift, and go to state 165
    FOREACH     shift, and go to state 166
    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 167
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    '{'         shift, and go to state 116

    decl           go to state 169
    block          go to state 170
    stmt_list      go to state 305
    stmt           go to state 172
    simple_stmt    go to state 173
    return_stmt    go to state 174
    const_decl     go to state 33
    var_decl       go to state 34
    id_list        go to state 175
    expr_list      go to state 176
    expr           go to state 177
    primary_expr   go to state 102
    operand        go to state 103
    operand_name   go to state 104
    if_stmt        go to state 178
    switch_stmt    go to state 179
    for_stmt       go to state 180
    while_stmt     go to state 181
    do_while_stmt  go to state 182
    foreach_stmt   go to state 183


State 293

   40 stmt_list: stmt_list . stmt ';'
  144 case_item: DEFAULT ':' stmt_list .

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 158
    BREAK       shift, and go to state 159
    CONTINUE    shift, and go to state 160
    IF          shift, and go to state 161
    SWITCH      shift, and go to state 162
    DO          shift, and go to state 163
    WHILE       shift, and go to state 164
    FOR         shift, and go to state 165
    FOREACH     shift, and go to state 166
    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 167
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    '{'         shift, and go to state 116

    $default  reduce using rule 144 (case_item)

    decl           go to state 169
    block          go to state 170
    stmt           go to state 226
    simple_stmt    go to state 173
    return_stmt    go to state 174
    const_decl     go to state 33
    var_decl       go to state 34
    id_list        go to state 175
    expr_list      go to state 176
    expr           go to state 177
    primary_expr   go to state 102
    operand        go to state 103
    operand_name   go to state 104
    if_stmt        go to state 178
    switch_stmt    go to state 179
    for_stmt       go to state 180
    while_stmt     go to state 181
    do_while_stmt  go to state 182
    foreach_stmt   go to state 183


State 294

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  150 do_while_stmt: DO block WHILE '(' expr . ')' ';'

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ')'     shift, and go to state 306


State 295

  149 while_stmt: WHILE '(' expr ')' block .

    $default  reduce using rule 149 (while_stmt)


State 296

  147 for_stmt: FOR '(' ';' ';' ')' . block

    '{'  shift, and go to state 116

    block  go to state 307


State 297

  146 for_stmt: FOR '(' ';' expr ';' . ')' block

    ')'  shift, and go to state 308


State 298

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  145 for_stmt: FOR '(' simple_stmt ';' expr . ';' simple_stmt ')' block

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ';'     shift, and go to state 309


State 299

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  151 foreach_stmt: FOREACH '(' ID ':' expr . ')' block

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ')'     shift, and go to state 310


State 300

  152 foreach_stmt: FOREACH '(' type ID ':' . expr ')' block

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 95
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    expr          go to state 311
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 301

  128 primary_expr: primary_expr '[' ':' expr ':' expr ']' .

    $default  reduce using rule 128 (primary_expr)


State 302

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  129 primary_expr: primary_expr '[' expr ':' expr ':' expr . ']'

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ']'     shift, and go to state 312


State 303

  137 if_stmt: IF '(' expr ')' block ELSE . block
  138        | IF '(' expr ')' block ELSE . if_stmt

    IF   shift, and go to state 161
    '{'  shift, and go to state 116

    block    go to state 313
    if_stmt  go to state 314


State 304

  139 switch_stmt: SWITCH '(' expr ')' '{' case_list . '}'
  141 case_list: case_list . case_item

    CASE     shift, and go to state 251
    DEFAULT  shift, and go to state 252
    '}'      shift, and go to state 315

    case_item  go to state 279


State 305

   40 stmt_list: stmt_list . stmt ';'
  143 case_item: CASE expr ':' stmt_list .

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 158
    BREAK       shift, and go to state 159
    CONTINUE    shift, and go to state 160
    IF          shift, and go to state 161
    SWITCH      shift, and go to state 162
    DO          shift, and go to state 163
    WHILE       shift, and go to state 164
    FOR         shift, and go to state 165
    FOREACH     shift, and go to state 166
    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 167
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99
    '{'         shift, and go to state 116

    $default  reduce using rule 143 (case_item)

    decl           go to state 169
    block          go to state 170
    stmt           go to state 226
    simple_stmt    go to state 173
    return_stmt    go to state 174
    const_decl     go to state 33
    var_decl       go to state 34
    id_list        go to state 175
    expr_list      go to state 176
    expr           go to state 177
    primary_expr   go to state 102
    operand        go to state 103
    operand_name   go to state 104
    if_stmt        go to state 178
    switch_stmt    go to state 179
    for_stmt       go to state 180
    while_stmt     go to state 181
    do_while_stmt  go to state 182
    foreach_stmt   go to state 183


State 306

  150 do_while_stmt: DO block WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 316


State 307

  147 for_stmt: FOR '(' ';' ';' ')' block .

    $default  reduce using rule 147 (for_stmt)


State 308

  146 for_stmt: FOR '(' ';' expr ';' ')' . block

    '{'  shift, and go to state 116

    block  go to state 317


State 309

  145 for_stmt: FOR '(' simple_stmt ';' expr ';' . simple_stmt ')' block

    THIS        shift, and go to state 90
    SUPER       shift, and go to state 91
    INT_LIT     shift, and go to state 92
    FLOAT_LIT   shift, and go to state 93
    BOOL_LIT    shift, and go to state 94
    ID          shift, and go to state 167
    STRING_LIT  shift, and go to state 96
    '-'         shift, and go to state 97
    '!'         shift, and go to state 98
    '('         shift, and go to state 99

    simple_stmt   go to state 318
    id_list       go to state 175
    expr_list     go to state 176
    expr          go to state 177
    primary_expr  go to state 102
    operand       go to state 103
    operand_name  go to state 104


State 310

  151 foreach_stmt: FOREACH '(' ID ':' expr ')' . block

    '{'  shift, and go to state 116

    block  go to state 319


State 311

  108 expr: expr . '+' expr
  109     | expr . '-' expr
  110     | expr . '*' expr
  111     | expr . '/' expr
  112     | expr . EQ expr
  113     | expr . NE expr
  114     | expr . '<' expr
  115     | expr . '>' expr
  116     | expr . LE expr
  117     | expr . GE expr
  118     | expr . AND_OP expr
  119     | expr . OR_OP expr
  152 foreach_stmt: FOREACH '(' type ID ':' expr . ')' block

    EQ      shift, and go to state 136
    NE      shift, and go to state 137
    LE      shift, and go to state 138
    GE      shift, and go to state 139
    AND_OP  shift, and go to state 140
    OR_OP   shift, and go to state 141
    '<'     shift, and go to state 142
    '>'     shift, and go to state 143
    '+'     shift, and go to state 144
    '-'     shift, and go to state 145
    '*'     shift, and go to state 146
    '/'     shift, and go to state 147
    ')'     shift, and go to state 320


State 312

  129 primary_expr: primary_expr '[' expr ':' expr ':' expr ']' .

    $default  reduce using rule 129 (primary_expr)


State 313

  137 if_stmt: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 137 (if_stmt)


State 314

  138 if_stmt: IF '(' expr ')' block ELSE if_stmt .

    $default  reduce using rule 138 (if_stmt)


State 315

  139 switch_stmt: SWITCH '(' expr ')' '{' case_list '}' .

    $default  reduce using rule 139 (switch_stmt)


State 316

  150 do_while_stmt: DO block WHILE '(' expr ')' ';' .

    $default  reduce using rule 150 (do_while_stmt)


State 317

  146 for_stmt: FOR '(' ';' expr ';' ')' block .

    $default  reduce using rule 146 (for_stmt)


State 318

  145 for_stmt: FOR '(' simple_stmt ';' expr ';' simple_stmt . ')' block

    ')'  shift, and go to state 321


State 319

  151 foreach_stmt: FOREACH '(' ID ':' expr ')' block .

    $default  reduce using rule 151 (foreach_stmt)


State 320

  152 foreach_stmt: FOREACH '(' type ID ':' expr ')' . block

    '{'  shift, and go to state 116

    block  go to state 322


State 321

  145 for_stmt: FOR '(' simple_stmt ';' expr ';' simple_stmt ')' . block

    '{'  shift, and go to state 116

    block  go to state 323


State 322

  152 foreach_stmt: FOREACH '(' type ID ':' expr ')' block .

    $default  reduce using rule 152 (foreach_stmt)


State 323

  145 for_stmt: FOR '(' simple_stmt ';' expr ';' simple_stmt ')' block .

    $default  reduce using rule 145 (for_stmt)
