Terminals unused in grammar

    NEW
    PUBLIC
    PRIVATE
    PROTECTED
    AUTO
    REF


State 106 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: module_clause ';' e_import_decl_list ';' e_top_level_decl_list

    2 module_clause: MODULE ID

    3 e_import_decl_list: import_decl_list
    4                   | %empty

    5 import_decl_list: import_decl_list import_decl ';'
    6                 | import_decl ';'

    7 import_decl: IMPORT import_spec
    8            | IMPORT '(' e_import_spec_list ')'

    9 e_import_spec_list: import_spec_list
   10                   | %empty

   11 import_spec_list: import_spec_list import_spec ';'
   12                 | import_spec ';'

   13 import_spec: STRING_LIT
   14            | '.' STRING_LIT
   15            | STRING_LIT STRING_LIT

   16 e_top_level_decl_list: top_level_decl_list
   17                      | %empty

   18 top_level_decl_list: top_level_decl_list top_level_decl ';'
   19                    | top_level_decl ';'

   20 top_level_decl: decl
   21               | func_decl
   22               | class_decl
   23               | enum_decl

   24 decl: const_decl
   25     | var_decl

   26 func_decl: FUNC ID '(' param_list ')' block
   27          | FUNC ID '(' ')' block
   28          | FUNC ID '(' param_list ')' type block
   29          | FUNC ID '(' ')' type block

   30 param_list: param_list ',' param_decl
   31           | param_decl

   32 param_decl: id_list type_or_builtin
   33           | type_or_builtin

   34 type_or_builtin: type_name
   35                | type_name '[' type_list ']'
   36                | FUNC '(' param_list ')'
   37                | FUNC '(' ')'
   38                | '[' expr ']' type
   39                | '[' ']' type

   40 block: '{' stmt_list '}'
   41      | '{' '}'

   42 stmt_list: stmt_list stmt ';'
   43          | stmt ';'

   44 stmt: decl
   45     | simple_stmt
   46     | return_stmt
   47     | BREAK
   48     | CONTINUE
   49     | block
   50     | if_stmt
   51     | switch_stmt
   52     | for_stmt
   53     | while_stmt
   54     | do_while_stmt
   55     | foreach_stmt

   56 simple_stmt: expr
   57            | expr INC
   58            | expr DEC
   59            | assignment_stmt

   60 assignment_stmt: lvalue '=' expr_list
   61                | lvalue PLUS_ASSIGN expr_list
   62                | lvalue MINUS_ASSIGN expr_list
   63                | lvalue MUL_ASSIGN expr_list
   64                | lvalue DIV_ASSIGN expr_list
   65                | lvalue TILDE_ASSIGN expr_list

   66 lvalue: primary_name
   67       | lvalue ',' primary_name

   68 return_stmt: RETURN
   69            | RETURN expr_list

   70 const_decl: CONST const_spec
   71           | CONST '(' const_spec_list ')'

   72 const_spec_list: const_spec_list ';' const_spec
   73                | const_spec ';'

   74 const_spec: id_list
   75           | id_list '=' expr_list
   76           | id_list type '=' expr_list

   77 var_decl: VAR var_spec
   78         | VAR '(' var_spec_list ')'

   79 var_spec_list: var_spec_list ';' var_spec
   80              | var_spec ';'

   81 var_spec: id_list type
   82         | id_list type '=' expr_list
   83         | id_list '=' expr_list

   84 id_list: id_list ',' ID
   85        | ID

   86 type_name: INT
   87          | FLOAT
   88          | DOUBLE
   89          | REAL
   90          | BOOL
   91          | CHAR
   92          | STRING
   93          | VOID

   94 type: type_name
   95     | type_name '[' type_list ']'
   96     | '[' expr ']' type
   97     | '[' ']' type
   98     | FUNC '(' param_list ')'
   99     | FUNC '(' ')'

  100 type_list: type_list ',' type
  101          | type

  102 expr_list: expr_list ',' expr
  103          | expr

  104 expr: or_expr

  105 or_expr: or_expr OR_OP and_expr
  106        | and_expr

  107 and_expr: and_expr AND_OP eq_expr
  108         | eq_expr

  109 eq_expr: eq_expr EQ rel_expr
  110        | eq_expr NE rel_expr
  111        | rel_expr

  112 rel_expr: rel_expr '<' add_expr
  113         | rel_expr '>' add_expr
  114         | rel_expr LE add_expr
  115         | rel_expr GE add_expr
  116         | add_expr

  117 add_expr: add_expr '+' mul_expr
  118         | add_expr '-' mul_expr
  119         | mul_expr

  120 mul_expr: mul_expr '*' unary_expr
  121         | mul_expr '/' unary_expr
  122         | unary_expr

  123 unary_expr: '!' unary_expr
  124           | '-' unary_expr
  125           | postfix_expr

  126 postfix_expr: postfix_expr '[' expr ']'
  127             | postfix_expr '[' ':' ']'
  128             | postfix_expr '[' expr ':' ']'
  129             | postfix_expr '[' ':' expr ']'
  130             | postfix_expr '[' expr ':' expr ']'
  131             | postfix_expr '[' ':' expr ':' expr ']'
  132             | postfix_expr '[' expr ':' expr ':' expr ']'
  133             | postfix_expr '[' type_list ']'
  134             | primary_expr

  135 primary_expr: operand
  136             | operand INC
  137             | operand DEC

  138 primary_name: ID
  139             | THIS
  140             | SUPER

  141 operand: primary_name
  142        | '(' expr ')'
  143        | INT_LIT
  144        | FLOAT_LIT
  145        | STRING_LIT
  146        | BOOL_LIT

  147 if_stmt: IF '(' expr ')' block ELSE if_stmt
  148        | IF '(' expr ')' block ELSE block
  149        | IF '(' expr ')' block

  150 switch_stmt: SWITCH '(' expr ')' '{' case_list '}'
  151            | SWITCH '{' case_list '}'

  152 case_list: case_list case_item
  153          | case_item

  154 case_item: CASE expr ':' stmt_list
  155          | DEFAULT ':' stmt_list

  156 for_stmt: FOR '(' simple_stmt ';' expr ';' simple_stmt ')' block
  157         | FOR '(' ';' expr ';' ')' block
  158         | FOR '(' ';' ';' ')' block
  159         | FOR expr block

  160 while_stmt: WHILE '(' expr ')' block

  161 do_while_stmt: DO block WHILE '(' expr ')' ';'

  162 foreach_stmt: FOREACH '(' ID ':' expr ')' block
  163             | FOREACH '(' type ID ':' expr ')' block

  164 class_decl: CLASS ID class_inherit_opt '{' class_body_opt '}'

  165 class_inherit_opt: ':' ID
  166                  | %empty

  167 class_body_opt: class_body
  168               | %empty

  169 class_body: class_body class_member
  170           | class_member

  171 class_member: decl ';'
  172             | func_decl
  173             | OVERRIDE func_decl

  174 enum_decl: ENUM ID '{' enum_member_list '}'
  175          | ENUM ID '{' enum_member_list ',' '}'

  176 enum_member_list: enum_member_list ',' enum_member
  177                 | enum_member

  178 enum_member: ID
  179            | ID '=' expr


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 123
    '(' (40) 8 26 27 28 29 36 37 71 78 98 99 142 147 148 149 150 156 157 158 160 161 162 163
    ')' (41) 8 26 27 28 29 36 37 71 78 98 99 142 147 148 149 150 156 157 158 160 161 162 163
    '*' (42) 120
    '+' (43) 117
    ',' (44) 30 67 84 100 102 175 176
    '-' (45) 118 124
    '.' (46) 14
    '/' (47) 121
    ':' (58) 127 128 129 130 131 132 154 155 162 163 165
    ';' (59) 1 5 6 11 12 18 19 42 43 72 73 79 80 156 157 158 161 171
    '<' (60) 112
    '=' (61) 60 75 76 82 83 179
    '>' (62) 113
    '[' (91) 35 38 39 95 96 97 126 127 128 129 130 131 132 133
    ']' (93) 35 38 39 95 96 97 126 127 128 129 130 131 132 133
    '{' (123) 40 41 150 151 164 174 175
    '}' (125) 40 41 150 151 164 174 175
    error (256)
    MODULE (258) 2
    IMPORT (259) 7 8
    CONST (260) 70 71
    FUNC (261) 26 27 28 29 36 37 98 99
    VAR (262) 77 78
    RETURN (263) 68 69
    BREAK (264) 47
    CONTINUE (265) 48
    IF (266) 147 148 149
    ELSE (267) 147 148
    SWITCH (268) 150 151
    CASE (269) 154
    DEFAULT (270) 155
    DO (271) 161
    WHILE (272) 160 161
    FOR (273) 156 157 158 159
    FOREACH (274) 162 163
    CLASS (275) 164
    ENUM (276) 174 175
    NEW (277)
    THIS (278) 139
    SUPER (279) 140
    OVERRIDE (280) 173
    PUBLIC (281)
    PRIVATE (282)
    PROTECTED (283)
    AUTO (284)
    REF (285)
    INT (286) 86
    FLOAT (287) 87
    DOUBLE (288) 88
    REAL (289) 89
    BOOL (290) 90
    CHAR (291) 91
    STRING (292) 92
    VOID (293) 93
    INT_LIT <int_lit> (294) 143
    FLOAT_LIT <float_lit> (295) 144
    BOOL_LIT <bool_lit> (296) 146
    ID <identifier> (297) 2 26 27 28 29 84 85 138 162 163 164 165 174 175 178 179
    STRING_LIT <str_lit> (298) 13 14 15 145
    PLUS_ASSIGN (299) 61
    MINUS_ASSIGN (300) 62
    MUL_ASSIGN (301) 63
    DIV_ASSIGN (302) 64
    TILDE_ASSIGN (303) 65
    EQ (304) 109
    NE (305) 110
    LE (306) 114
    GE (307) 115
    AND_OP (308) 107
    OR_OP (309) 105
    INC (310) 57 136
    DEC (311) 58 137


Nonterminals, with rules where they appear

    $accept (75)
        on left: 0
    program (76)
        on left: 1
        on right: 0
    module_clause (77)
        on left: 2
        on right: 1
    e_import_decl_list (78)
        on left: 3 4
        on right: 1
    import_decl_list (79)
        on left: 5 6
        on right: 3 5
    import_decl (80)
        on left: 7 8
        on right: 5 6
    e_import_spec_list (81)
        on left: 9 10
        on right: 8
    import_spec_list (82)
        on left: 11 12
        on right: 9 11
    import_spec (83)
        on left: 13 14 15
        on right: 7 11 12
    e_top_level_decl_list (84)
        on left: 16 17
        on right: 1
    top_level_decl_list (85)
        on left: 18 19
        on right: 16 18
    top_level_decl (86)
        on left: 20 21 22 23
        on right: 18 19
    decl (87)
        on left: 24 25
        on right: 20 44 171
    func_decl (88)
        on left: 26 27 28 29
        on right: 21 172 173
    param_list (89)
        on left: 30 31
        on right: 26 28 30 36 98
    param_decl (90)
        on left: 32 33
        on right: 30 31
    type_or_builtin (91)
        on left: 34 35 36 37 38 39
        on right: 32 33
    block (92)
        on left: 40 41
        on right: 26 27 28 29 49 147 148 149 156 157 158 159 160 161 162 163
    stmt_list (93)
        on left: 42 43
        on right: 40 42 154 155
    stmt (94)
        on left: 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 42 43
    simple_stmt (95)
        on left: 56 57 58 59
        on right: 45 156
    assignment_stmt (96)
        on left: 60 61 62 63 64 65
        on right: 59
    lvalue (97)
        on left: 66 67
        on right: 60 61 62 63 64 65 67
    return_stmt (98)
        on left: 68 69
        on right: 46
    const_decl (99)
        on left: 70 71
        on right: 24
    const_spec_list (100)
        on left: 72 73
        on right: 71 72
    const_spec (101)
        on left: 74 75 76
        on right: 70 72 73
    var_decl (102)
        on left: 77 78
        on right: 25
    var_spec_list (103)
        on left: 79 80
        on right: 78 79
    var_spec (104)
        on left: 81 82 83
        on right: 77 79 80
    id_list (105)
        on left: 84 85
        on right: 32 74 75 76 81 82 83 84
    type_name (106)
        on left: 86 87 88 89 90 91 92 93
        on right: 34 35 94 95
    type (107)
        on left: 94 95 96 97 98 99
        on right: 28 29 38 39 76 81 82 96 97 100 101 163
    type_list (108)
        on left: 100 101
        on right: 35 95 100 133
    expr_list (109)
        on left: 102 103
        on right: 60 61 62 63 64 65 69 75 76 82 83 102
    expr (110)
        on left: 104
        on right: 38 56 57 58 96 102 103 126 128 129 130 131 132 142 147 148 149 150 154 156 157 159 160 161 162 163 179
    or_expr (111)
        on left: 105 106
        on right: 104 105
    and_expr (112)
        on left: 107 108
        on right: 105 106 107
    eq_expr (113)
        on left: 109 110 111
        on right: 107 108 109 110
    rel_expr (114)
        on left: 112 113 114 115 116
        on right: 109 110 111 112 113 114 115
    add_expr (115)
        on left: 117 118 119
        on right: 112 113 114 115 116 117 118
    mul_expr (116)
        on left: 120 121 122
        on right: 117 118 119 120 121
    unary_expr (117)
        on left: 123 124 125
        on right: 120 121 122 123 124
    postfix_expr (118)
        on left: 126 127 128 129 130 131 132 133 134
        on right: 125 126 127 128 129 130 131 132 133
    primary_expr (119)
        on left: 135 136 137
        on right: 134
    primary_name (120)
        on left: 138 139 140
        on right: 66 67 141
    operand (121)
        on left: 141 142 143 144 145 146
        on right: 135 136 137
    if_stmt (122)
        on left: 147 148 149
        on right: 50 147
    switch_stmt (123)
        on left: 150 151
        on right: 51
    case_list (124)
        on left: 152 153
        on right: 150 151 152
    case_item (125)
        on left: 154 155
        on right: 152 153
    for_stmt (126)
        on left: 156 157 158 159
        on right: 52
    while_stmt (127)
        on left: 160
        on right: 53
    do_while_stmt (128)
        on left: 161
        on right: 54
    foreach_stmt (129)
        on left: 162 163
        on right: 55
    class_decl (130)
        on left: 164
        on right: 22
    class_inherit_opt (131)
        on left: 165 166
        on right: 164
    class_body_opt (132)
        on left: 167 168
        on right: 164
    class_body (133)
        on left: 169 170
        on right: 167 169
    class_member (134)
        on left: 171 172 173
        on right: 169 170
    enum_decl (135)
        on left: 174 175
        on right: 23
    enum_member_list (136)
        on left: 176 177
        on right: 174 175 176
    enum_member (137)
        on left: 178 179
        on right: 176 177


State 0

    0 $accept: . program $end

    MODULE  shift, and go to state 1

    program        go to state 2
    module_clause  go to state 3


State 1

    2 module_clause: MODULE . ID

    ID  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: module_clause . ';' e_import_decl_list ';' e_top_level_decl_list

    ';'  shift, and go to state 6


State 4

    2 module_clause: MODULE ID .

    $default  reduce using rule 2 (module_clause)


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: module_clause ';' . e_import_decl_list ';' e_top_level_decl_list

    IMPORT  shift, and go to state 7

    $default  reduce using rule 4 (e_import_decl_list)

    e_import_decl_list  go to state 8
    import_decl_list    go to state 9
    import_decl         go to state 10


State 7

    7 import_decl: IMPORT . import_spec
    8            | IMPORT . '(' e_import_spec_list ')'

    STRING_LIT  shift, and go to state 11
    '('         shift, and go to state 12
    '.'         shift, and go to state 13

    import_spec  go to state 14


State 8

    1 program: module_clause ';' e_import_decl_list . ';' e_top_level_decl_list

    ';'  shift, and go to state 15


State 9

    3 e_import_decl_list: import_decl_list .
    5 import_decl_list: import_decl_list . import_decl ';'

    IMPORT  shift, and go to state 7

    $default  reduce using rule 3 (e_import_decl_list)

    import_decl  go to state 16


State 10

    6 import_decl_list: import_decl . ';'

    ';'  shift, and go to state 17


State 11

   13 import_spec: STRING_LIT .
   15            | STRING_LIT . STRING_LIT

    STRING_LIT  shift, and go to state 18

    $default  reduce using rule 13 (import_spec)


State 12

    8 import_decl: IMPORT '(' . e_import_spec_list ')'

    STRING_LIT  shift, and go to state 11
    '.'         shift, and go to state 13

    $default  reduce using rule 10 (e_import_spec_list)

    e_import_spec_list  go to state 19
    import_spec_list    go to state 20
    import_spec         go to state 21


State 13

   14 import_spec: '.' . STRING_LIT

    STRING_LIT  shift, and go to state 22


State 14

    7 import_decl: IMPORT import_spec .

    $default  reduce using rule 7 (import_decl)


State 15

    1 program: module_clause ';' e_import_decl_list ';' . e_top_level_decl_list

    CONST  shift, and go to state 23
    FUNC   shift, and go to state 24
    VAR    shift, and go to state 25
    CLASS  shift, and go to state 26
    ENUM   shift, and go to state 27

    $default  reduce using rule 17 (e_top_level_decl_list)

    e_top_level_decl_list  go to state 28
    top_level_decl_list    go to state 29
    top_level_decl         go to state 30
    decl                   go to state 31
    func_decl              go to state 32
    const_decl             go to state 33
    var_decl               go to state 34
    class_decl             go to state 35
    enum_decl              go to state 36


State 16

    5 import_decl_list: import_decl_list import_decl . ';'

    ';'  shift, and go to state 37


State 17

    6 import_decl_list: import_decl ';' .

    $default  reduce using rule 6 (import_decl_list)


State 18

   15 import_spec: STRING_LIT STRING_LIT .

    $default  reduce using rule 15 (import_spec)


State 19

    8 import_decl: IMPORT '(' e_import_spec_list . ')'

    ')'  shift, and go to state 38


State 20

    9 e_import_spec_list: import_spec_list .
   11 import_spec_list: import_spec_list . import_spec ';'

    STRING_LIT  shift, and go to state 11
    '.'         shift, and go to state 13

    $default  reduce using rule 9 (e_import_spec_list)

    import_spec  go to state 39


State 21

   12 import_spec_list: import_spec . ';'

    ';'  shift, and go to state 40


State 22

   14 import_spec: '.' STRING_LIT .

    $default  reduce using rule 14 (import_spec)


State 23

   70 const_decl: CONST . const_spec
   71           | CONST . '(' const_spec_list ')'

    ID   shift, and go to state 41
    '('  shift, and go to state 42

    const_spec  go to state 43
    id_list     go to state 44


State 24

   26 func_decl: FUNC . ID '(' param_list ')' block
   27          | FUNC . ID '(' ')' block
   28          | FUNC . ID '(' param_list ')' type block
   29          | FUNC . ID '(' ')' type block

    ID  shift, and go to state 45


State 25

   77 var_decl: VAR . var_spec
   78         | VAR . '(' var_spec_list ')'

    ID   shift, and go to state 41
    '('  shift, and go to state 46

    var_spec  go to state 47
    id_list   go to state 48


State 26

  164 class_decl: CLASS . ID class_inherit_opt '{' class_body_opt '}'

    ID  shift, and go to state 49


State 27

  174 enum_decl: ENUM . ID '{' enum_member_list '}'
  175          | ENUM . ID '{' enum_member_list ',' '}'

    ID  shift, and go to state 50


State 28

    1 program: module_clause ';' e_import_decl_list ';' e_top_level_decl_list .

    $default  reduce using rule 1 (program)


State 29

   16 e_top_level_decl_list: top_level_decl_list .
   18 top_level_decl_list: top_level_decl_list . top_level_decl ';'

    CONST  shift, and go to state 23
    FUNC   shift, and go to state 24
    VAR    shift, and go to state 25
    CLASS  shift, and go to state 26
    ENUM   shift, and go to state 27

    $default  reduce using rule 16 (e_top_level_decl_list)

    top_level_decl  go to state 51
    decl            go to state 31
    func_decl       go to state 32
    const_decl      go to state 33
    var_decl        go to state 34
    class_decl      go to state 35
    enum_decl       go to state 36


State 30

   19 top_level_decl_list: top_level_decl . ';'

    ';'  shift, and go to state 52


State 31

   20 top_level_decl: decl .

    $default  reduce using rule 20 (top_level_decl)


State 32

   21 top_level_decl: func_decl .

    $default  reduce using rule 21 (top_level_decl)


State 33

   24 decl: const_decl .

    $default  reduce using rule 24 (decl)


State 34

   25 decl: var_decl .

    $default  reduce using rule 25 (decl)


State 35

   22 top_level_decl: class_decl .

    $default  reduce using rule 22 (top_level_decl)


State 36

   23 top_level_decl: enum_decl .

    $default  reduce using rule 23 (top_level_decl)


State 37

    5 import_decl_list: import_decl_list import_decl ';' .

    $default  reduce using rule 5 (import_decl_list)


State 38

    8 import_decl: IMPORT '(' e_import_spec_list ')' .

    $default  reduce using rule 8 (import_decl)


State 39

   11 import_spec_list: import_spec_list import_spec . ';'

    ';'  shift, and go to state 53


State 40

   12 import_spec_list: import_spec ';' .

    $default  reduce using rule 12 (import_spec_list)


State 41

   85 id_list: ID .

    $default  reduce using rule 85 (id_list)


State 42

   71 const_decl: CONST '(' . const_spec_list ')'

    ID  shift, and go to state 41

    const_spec_list  go to state 54
    const_spec       go to state 55
    id_list          go to state 44


State 43

   70 const_decl: CONST const_spec .

    $default  reduce using rule 70 (const_decl)


State 44

   74 const_spec: id_list .
   75           | id_list . '=' expr_list
   76           | id_list . type '=' expr_list
   84 id_list: id_list . ',' ID

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ','     shift, and go to state 65
    '['     shift, and go to state 66
    '='     shift, and go to state 67

    $default  reduce using rule 74 (const_spec)

    type_name  go to state 68
    type       go to state 69


State 45

   26 func_decl: FUNC ID . '(' param_list ')' block
   27          | FUNC ID . '(' ')' block
   28          | FUNC ID . '(' param_list ')' type block
   29          | FUNC ID . '(' ')' type block

    '('  shift, and go to state 70


State 46

   78 var_decl: VAR '(' . var_spec_list ')'

    ID  shift, and go to state 41

    var_spec_list  go to state 71
    var_spec       go to state 72
    id_list        go to state 48


State 47

   77 var_decl: VAR var_spec .

    $default  reduce using rule 77 (var_decl)


State 48

   81 var_spec: id_list . type
   82         | id_list . type '=' expr_list
   83         | id_list . '=' expr_list
   84 id_list: id_list . ',' ID

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ','     shift, and go to state 65
    '['     shift, and go to state 66
    '='     shift, and go to state 73

    type_name  go to state 68
    type       go to state 74


State 49

  164 class_decl: CLASS ID . class_inherit_opt '{' class_body_opt '}'

    ':'  shift, and go to state 75

    $default  reduce using rule 166 (class_inherit_opt)

    class_inherit_opt  go to state 76


State 50

  174 enum_decl: ENUM ID . '{' enum_member_list '}'
  175          | ENUM ID . '{' enum_member_list ',' '}'

    '{'  shift, and go to state 77


State 51

   18 top_level_decl_list: top_level_decl_list top_level_decl . ';'

    ';'  shift, and go to state 78


State 52

   19 top_level_decl_list: top_level_decl ';' .

    $default  reduce using rule 19 (top_level_decl_list)


State 53

   11 import_spec_list: import_spec_list import_spec ';' .

    $default  reduce using rule 11 (import_spec_list)


State 54

   71 const_decl: CONST '(' const_spec_list . ')'
   72 const_spec_list: const_spec_list . ';' const_spec

    ';'  shift, and go to state 79
    ')'  shift, and go to state 80


State 55

   73 const_spec_list: const_spec . ';'

    ';'  shift, and go to state 81


State 56

   98 type: FUNC . '(' param_list ')'
   99     | FUNC . '(' ')'

    '('  shift, and go to state 82


State 57

   86 type_name: INT .

    $default  reduce using rule 86 (type_name)


State 58

   87 type_name: FLOAT .

    $default  reduce using rule 87 (type_name)


State 59

   88 type_name: DOUBLE .

    $default  reduce using rule 88 (type_name)


State 60

   89 type_name: REAL .

    $default  reduce using rule 89 (type_name)


State 61

   90 type_name: BOOL .

    $default  reduce using rule 90 (type_name)


State 62

   91 type_name: CHAR .

    $default  reduce using rule 91 (type_name)


State 63

   92 type_name: STRING .

    $default  reduce using rule 92 (type_name)


State 64

   93 type_name: VOID .

    $default  reduce using rule 93 (type_name)


State 65

   84 id_list: id_list ',' . ID

    ID  shift, and go to state 83


State 66

   96 type: '[' . expr ']' type
   97     | '[' . ']' type

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    ']'         shift, and go to state 92
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 95
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 67

   75 const_spec: id_list '=' . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 107
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 68

   94 type: type_name .
   95     | type_name . '[' type_list ']'

    '['  shift, and go to state 109

    $default  reduce using rule 94 (type)


State 69

   76 const_spec: id_list type . '=' expr_list

    '='  shift, and go to state 110


State 70

   26 func_decl: FUNC ID '(' . param_list ')' block
   27          | FUNC ID '(' . ')' block
   28          | FUNC ID '(' . param_list ')' type block
   29          | FUNC ID '(' . ')' type block

    FUNC    shift, and go to state 111
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 41
    ')'     shift, and go to state 112
    '['     shift, and go to state 113

    param_list       go to state 114
    param_decl       go to state 115
    type_or_builtin  go to state 116
    id_list          go to state 117
    type_name        go to state 118


State 71

   78 var_decl: VAR '(' var_spec_list . ')'
   79 var_spec_list: var_spec_list . ';' var_spec

    ';'  shift, and go to state 119
    ')'  shift, and go to state 120


State 72

   80 var_spec_list: var_spec . ';'

    ';'  shift, and go to state 121


State 73

   83 var_spec: id_list '=' . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 122
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 74

   81 var_spec: id_list type .
   82         | id_list type . '=' expr_list

    '='  shift, and go to state 123

    $default  reduce using rule 81 (var_spec)


State 75

  165 class_inherit_opt: ':' . ID

    ID  shift, and go to state 124


State 76

  164 class_decl: CLASS ID class_inherit_opt . '{' class_body_opt '}'

    '{'  shift, and go to state 125


State 77

  174 enum_decl: ENUM ID '{' . enum_member_list '}'
  175          | ENUM ID '{' . enum_member_list ',' '}'

    ID  shift, and go to state 126

    enum_member_list  go to state 127
    enum_member       go to state 128


State 78

   18 top_level_decl_list: top_level_decl_list top_level_decl ';' .

    $default  reduce using rule 18 (top_level_decl_list)


State 79

   72 const_spec_list: const_spec_list ';' . const_spec

    ID  shift, and go to state 41

    const_spec  go to state 129
    id_list     go to state 44


State 80

   71 const_decl: CONST '(' const_spec_list ')' .

    $default  reduce using rule 71 (const_decl)


State 81

   73 const_spec_list: const_spec ';' .

    $default  reduce using rule 73 (const_spec_list)


State 82

   98 type: FUNC '(' . param_list ')'
   99     | FUNC '(' . ')'

    FUNC    shift, and go to state 111
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 41
    ')'     shift, and go to state 130
    '['     shift, and go to state 113

    param_list       go to state 131
    param_decl       go to state 115
    type_or_builtin  go to state 116
    id_list          go to state 117
    type_name        go to state 118


State 83

   84 id_list: id_list ',' ID .

    $default  reduce using rule 84 (id_list)


State 84

  139 primary_name: THIS .

    $default  reduce using rule 139 (primary_name)


State 85

  140 primary_name: SUPER .

    $default  reduce using rule 140 (primary_name)


State 86

  143 operand: INT_LIT .

    $default  reduce using rule 143 (operand)


State 87

  144 operand: FLOAT_LIT .

    $default  reduce using rule 144 (operand)


State 88

  146 operand: BOOL_LIT .

    $default  reduce using rule 146 (operand)


State 89

  138 primary_name: ID .

    $default  reduce using rule 138 (primary_name)


State 90

  145 operand: STRING_LIT .

    $default  reduce using rule 145 (operand)


State 91

  142 operand: '(' . expr ')'

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 132
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 92

   97 type: '[' ']' . type

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    '['     shift, and go to state 66

    type_name  go to state 68
    type       go to state 133


State 93

  124 unary_expr: '-' . unary_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    unary_expr    go to state 134
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 94

  123 unary_expr: '!' . unary_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    unary_expr    go to state 135
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 95

   96 type: '[' expr . ']' type

    ']'  shift, and go to state 136


State 96

  104 expr: or_expr .
  105 or_expr: or_expr . OR_OP and_expr

    OR_OP  shift, and go to state 137

    $default  reduce using rule 104 (expr)


State 97

  106 or_expr: and_expr .
  107 and_expr: and_expr . AND_OP eq_expr

    AND_OP  shift, and go to state 138

    $default  reduce using rule 106 (or_expr)


State 98

  108 and_expr: eq_expr .
  109 eq_expr: eq_expr . EQ rel_expr
  110        | eq_expr . NE rel_expr

    EQ  shift, and go to state 139
    NE  shift, and go to state 140

    $default  reduce using rule 108 (and_expr)


State 99

  111 eq_expr: rel_expr .
  112 rel_expr: rel_expr . '<' add_expr
  113         | rel_expr . '>' add_expr
  114         | rel_expr . LE add_expr
  115         | rel_expr . GE add_expr

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    '<'  shift, and go to state 143
    '>'  shift, and go to state 144

    $default  reduce using rule 111 (eq_expr)


State 100

  116 rel_expr: add_expr .
  117 add_expr: add_expr . '+' mul_expr
  118         | add_expr . '-' mul_expr

    '+'  shift, and go to state 145
    '-'  shift, and go to state 146

    $default  reduce using rule 116 (rel_expr)


State 101

  119 add_expr: mul_expr .
  120 mul_expr: mul_expr . '*' unary_expr
  121         | mul_expr . '/' unary_expr

    '*'  shift, and go to state 147
    '/'  shift, and go to state 148

    $default  reduce using rule 119 (add_expr)


State 102

  122 mul_expr: unary_expr .

    $default  reduce using rule 122 (mul_expr)


State 103

  125 unary_expr: postfix_expr .
  126 postfix_expr: postfix_expr . '[' expr ']'
  127             | postfix_expr . '[' ':' ']'
  128             | postfix_expr . '[' expr ':' ']'
  129             | postfix_expr . '[' ':' expr ']'
  130             | postfix_expr . '[' expr ':' expr ']'
  131             | postfix_expr . '[' ':' expr ':' expr ']'
  132             | postfix_expr . '[' expr ':' expr ':' expr ']'
  133             | postfix_expr . '[' type_list ']'

    '['  shift, and go to state 149

    $default  reduce using rule 125 (unary_expr)


State 104

  134 postfix_expr: primary_expr .

    $default  reduce using rule 134 (postfix_expr)


State 105

  141 operand: primary_name .

    $default  reduce using rule 141 (operand)


State 106

  135 primary_expr: operand .
  136             | operand . INC
  137             | operand . DEC

    INC  shift, and go to state 150
    DEC  shift, and go to state 151

    INC       [reduce using rule 135 (primary_expr)]
    DEC       [reduce using rule 135 (primary_expr)]
    $default  reduce using rule 135 (primary_expr)


State 107

   75 const_spec: id_list '=' expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 75 (const_spec)


State 108

  103 expr_list: expr .

    $default  reduce using rule 103 (expr_list)


State 109

   95 type: type_name '[' . type_list ']'

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    '['     shift, and go to state 66

    type_name  go to state 68
    type       go to state 153
    type_list  go to state 154


State 110

   76 const_spec: id_list type '=' . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 155
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 111

   36 type_or_builtin: FUNC . '(' param_list ')'
   37                | FUNC . '(' ')'

    '('  shift, and go to state 156


State 112

   27 func_decl: FUNC ID '(' ')' . block
   29          | FUNC ID '(' ')' . type block

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    '['     shift, and go to state 66
    '{'     shift, and go to state 157

    block      go to state 158
    type_name  go to state 68
    type       go to state 159


State 113

   38 type_or_builtin: '[' . expr ']' type
   39                | '[' . ']' type

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    ']'         shift, and go to state 160
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 161
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 114

   26 func_decl: FUNC ID '(' param_list . ')' block
   28          | FUNC ID '(' param_list . ')' type block
   30 param_list: param_list . ',' param_decl

    ')'  shift, and go to state 162
    ','  shift, and go to state 163


State 115

   31 param_list: param_decl .

    $default  reduce using rule 31 (param_list)


State 116

   33 param_decl: type_or_builtin .

    $default  reduce using rule 33 (param_decl)


State 117

   32 param_decl: id_list . type_or_builtin
   84 id_list: id_list . ',' ID

    FUNC    shift, and go to state 111
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ','     shift, and go to state 65
    '['     shift, and go to state 113

    type_or_builtin  go to state 164
    type_name        go to state 118


State 118

   34 type_or_builtin: type_name .
   35                | type_name . '[' type_list ']'

    '['  shift, and go to state 165

    $default  reduce using rule 34 (type_or_builtin)


State 119

   79 var_spec_list: var_spec_list ';' . var_spec

    ID  shift, and go to state 41

    var_spec  go to state 166
    id_list   go to state 48


State 120

   78 var_decl: VAR '(' var_spec_list ')' .

    $default  reduce using rule 78 (var_decl)


State 121

   80 var_spec_list: var_spec ';' .

    $default  reduce using rule 80 (var_spec_list)


State 122

   83 var_spec: id_list '=' expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 83 (var_spec)


State 123

   82 var_spec: id_list type '=' . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 167
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 124

  165 class_inherit_opt: ':' ID .

    $default  reduce using rule 165 (class_inherit_opt)


State 125

  164 class_decl: CLASS ID class_inherit_opt '{' . class_body_opt '}'

    CONST     shift, and go to state 23
    FUNC      shift, and go to state 24
    VAR       shift, and go to state 25
    OVERRIDE  shift, and go to state 168

    $default  reduce using rule 168 (class_body_opt)

    decl            go to state 169
    func_decl       go to state 170
    const_decl      go to state 33
    var_decl        go to state 34
    class_body_opt  go to state 171
    class_body      go to state 172
    class_member    go to state 173


State 126

  178 enum_member: ID .
  179            | ID . '=' expr

    '='  shift, and go to state 174

    $default  reduce using rule 178 (enum_member)


State 127

  174 enum_decl: ENUM ID '{' enum_member_list . '}'
  175          | ENUM ID '{' enum_member_list . ',' '}'
  176 enum_member_list: enum_member_list . ',' enum_member

    ','  shift, and go to state 175
    '}'  shift, and go to state 176


State 128

  177 enum_member_list: enum_member .

    $default  reduce using rule 177 (enum_member_list)


State 129

   72 const_spec_list: const_spec_list ';' const_spec .

    $default  reduce using rule 72 (const_spec_list)


State 130

   99 type: FUNC '(' ')' .

    $default  reduce using rule 99 (type)


State 131

   30 param_list: param_list . ',' param_decl
   98 type: FUNC '(' param_list . ')'

    ')'  shift, and go to state 177
    ','  shift, and go to state 163


State 132

  142 operand: '(' expr . ')'

    ')'  shift, and go to state 178


State 133

   97 type: '[' ']' type .

    $default  reduce using rule 97 (type)


State 134

  124 unary_expr: '-' unary_expr .

    $default  reduce using rule 124 (unary_expr)


State 135

  123 unary_expr: '!' unary_expr .

    $default  reduce using rule 123 (unary_expr)


State 136

   96 type: '[' expr ']' . type

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    '['     shift, and go to state 66

    type_name  go to state 68
    type       go to state 179


State 137

  105 or_expr: or_expr OR_OP . and_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    and_expr      go to state 180
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 138

  107 and_expr: and_expr AND_OP . eq_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    eq_expr       go to state 181
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 139

  109 eq_expr: eq_expr EQ . rel_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    rel_expr      go to state 182
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 140

  110 eq_expr: eq_expr NE . rel_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    rel_expr      go to state 183
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 141

  114 rel_expr: rel_expr LE . add_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    add_expr      go to state 184
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 142

  115 rel_expr: rel_expr GE . add_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    add_expr      go to state 185
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 143

  112 rel_expr: rel_expr '<' . add_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    add_expr      go to state 186
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 144

  113 rel_expr: rel_expr '>' . add_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    add_expr      go to state 187
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 145

  117 add_expr: add_expr '+' . mul_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    mul_expr      go to state 188
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 146

  118 add_expr: add_expr '-' . mul_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    mul_expr      go to state 189
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 147

  120 mul_expr: mul_expr '*' . unary_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    unary_expr    go to state 190
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 148

  121 mul_expr: mul_expr '/' . unary_expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    unary_expr    go to state 191
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 149

  126 postfix_expr: postfix_expr '[' . expr ']'
  127             | postfix_expr '[' . ':' ']'
  128             | postfix_expr '[' . expr ':' ']'
  129             | postfix_expr '[' . ':' expr ']'
  130             | postfix_expr '[' . expr ':' expr ']'
  131             | postfix_expr '[' . ':' expr ':' expr ']'
  132             | postfix_expr '[' . expr ':' expr ':' expr ']'
  133             | postfix_expr '[' . type_list ']'

    FUNC        shift, and go to state 56
    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT         shift, and go to state 57
    FLOAT       shift, and go to state 58
    DOUBLE      shift, and go to state 59
    REAL        shift, and go to state 60
    BOOL        shift, and go to state 61
    CHAR        shift, and go to state 62
    STRING      shift, and go to state 63
    VOID        shift, and go to state 64
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '['         shift, and go to state 66
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94
    ':'         shift, and go to state 192

    type_name     go to state 68
    type          go to state 153
    type_list     go to state 193
    expr          go to state 194
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 150

  136 primary_expr: operand INC .

    $default  reduce using rule 136 (primary_expr)


State 151

  137 primary_expr: operand DEC .

    $default  reduce using rule 137 (primary_expr)


State 152

  102 expr_list: expr_list ',' . expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 195
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 153

  101 type_list: type .

    $default  reduce using rule 101 (type_list)


State 154

   95 type: type_name '[' type_list . ']'
  100 type_list: type_list . ',' type

    ','  shift, and go to state 196
    ']'  shift, and go to state 197


State 155

   76 const_spec: id_list type '=' expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 76 (const_spec)


State 156

   36 type_or_builtin: FUNC '(' . param_list ')'
   37                | FUNC '(' . ')'

    FUNC    shift, and go to state 111
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 41
    ')'     shift, and go to state 198
    '['     shift, and go to state 113

    param_list       go to state 199
    param_decl       go to state 115
    type_or_builtin  go to state 116
    id_list          go to state 117
    type_name        go to state 118


State 157

   40 block: '{' . stmt_list '}'
   41      | '{' . '}'

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 200
    BREAK       shift, and go to state 201
    CONTINUE    shift, and go to state 202
    IF          shift, and go to state 203
    SWITCH      shift, and go to state 204
    DO          shift, and go to state 205
    WHILE       shift, and go to state 206
    FOR         shift, and go to state 207
    FOREACH     shift, and go to state 208
    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '{'         shift, and go to state 157
    '}'         shift, and go to state 209
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    decl             go to state 210
    block            go to state 211
    stmt_list        go to state 212
    stmt             go to state 213
    simple_stmt      go to state 214
    assignment_stmt  go to state 215
    lvalue           go to state 216
    return_stmt      go to state 217
    const_decl       go to state 33
    var_decl         go to state 34
    expr             go to state 218
    or_expr          go to state 96
    and_expr         go to state 97
    eq_expr          go to state 98
    rel_expr         go to state 99
    add_expr         go to state 100
    mul_expr         go to state 101
    unary_expr       go to state 102
    postfix_expr     go to state 103
    primary_expr     go to state 104
    primary_name     go to state 219
    operand          go to state 106
    if_stmt          go to state 220
    switch_stmt      go to state 221
    for_stmt         go to state 222
    while_stmt       go to state 223
    do_while_stmt    go to state 224
    foreach_stmt     go to state 225


State 158

   27 func_decl: FUNC ID '(' ')' block .

    $default  reduce using rule 27 (func_decl)


State 159

   29 func_decl: FUNC ID '(' ')' type . block

    '{'  shift, and go to state 157

    block  go to state 226


State 160

   39 type_or_builtin: '[' ']' . type

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    '['     shift, and go to state 66

    type_name  go to state 68
    type       go to state 227


State 161

   38 type_or_builtin: '[' expr . ']' type

    ']'  shift, and go to state 228


State 162

   26 func_decl: FUNC ID '(' param_list ')' . block
   28          | FUNC ID '(' param_list ')' . type block

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    '['     shift, and go to state 66
    '{'     shift, and go to state 157

    block      go to state 229
    type_name  go to state 68
    type       go to state 230


State 163

   30 param_list: param_list ',' . param_decl

    FUNC    shift, and go to state 111
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 41
    '['     shift, and go to state 113

    param_decl       go to state 231
    type_or_builtin  go to state 116
    id_list          go to state 117
    type_name        go to state 118


State 164

   32 param_decl: id_list type_or_builtin .

    $default  reduce using rule 32 (param_decl)


State 165

   35 type_or_builtin: type_name '[' . type_list ']'

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    '['     shift, and go to state 66

    type_name  go to state 68
    type       go to state 153
    type_list  go to state 232


State 166

   79 var_spec_list: var_spec_list ';' var_spec .

    $default  reduce using rule 79 (var_spec_list)


State 167

   82 var_spec: id_list type '=' expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 82 (var_spec)


State 168

  173 class_member: OVERRIDE . func_decl

    FUNC  shift, and go to state 24

    func_decl  go to state 233


State 169

  171 class_member: decl . ';'

    ';'  shift, and go to state 234


State 170

  172 class_member: func_decl .

    $default  reduce using rule 172 (class_member)


State 171

  164 class_decl: CLASS ID class_inherit_opt '{' class_body_opt . '}'

    '}'  shift, and go to state 235


State 172

  167 class_body_opt: class_body .
  169 class_body: class_body . class_member

    CONST     shift, and go to state 23
    FUNC      shift, and go to state 24
    VAR       shift, and go to state 25
    OVERRIDE  shift, and go to state 168

    $default  reduce using rule 167 (class_body_opt)

    decl          go to state 169
    func_decl     go to state 170
    const_decl    go to state 33
    var_decl      go to state 34
    class_member  go to state 236


State 173

  170 class_body: class_member .

    $default  reduce using rule 170 (class_body)


State 174

  179 enum_member: ID '=' . expr

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 237
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 175

  175 enum_decl: ENUM ID '{' enum_member_list ',' . '}'
  176 enum_member_list: enum_member_list ',' . enum_member

    ID   shift, and go to state 126
    '}'  shift, and go to state 238

    enum_member  go to state 239


State 176

  174 enum_decl: ENUM ID '{' enum_member_list '}' .

    $default  reduce using rule 174 (enum_decl)


State 177

   98 type: FUNC '(' param_list ')' .

    $default  reduce using rule 98 (type)


State 178

  142 operand: '(' expr ')' .

    $default  reduce using rule 142 (operand)


State 179

   96 type: '[' expr ']' type .

    $default  reduce using rule 96 (type)


State 180

  105 or_expr: or_expr OR_OP and_expr .
  107 and_expr: and_expr . AND_OP eq_expr

    AND_OP  shift, and go to state 138

    $default  reduce using rule 105 (or_expr)


State 181

  107 and_expr: and_expr AND_OP eq_expr .
  109 eq_expr: eq_expr . EQ rel_expr
  110        | eq_expr . NE rel_expr

    EQ  shift, and go to state 139
    NE  shift, and go to state 140

    $default  reduce using rule 107 (and_expr)


State 182

  109 eq_expr: eq_expr EQ rel_expr .
  112 rel_expr: rel_expr . '<' add_expr
  113         | rel_expr . '>' add_expr
  114         | rel_expr . LE add_expr
  115         | rel_expr . GE add_expr

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    '<'  shift, and go to state 143
    '>'  shift, and go to state 144

    $default  reduce using rule 109 (eq_expr)


State 183

  110 eq_expr: eq_expr NE rel_expr .
  112 rel_expr: rel_expr . '<' add_expr
  113         | rel_expr . '>' add_expr
  114         | rel_expr . LE add_expr
  115         | rel_expr . GE add_expr

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    '<'  shift, and go to state 143
    '>'  shift, and go to state 144

    $default  reduce using rule 110 (eq_expr)


State 184

  114 rel_expr: rel_expr LE add_expr .
  117 add_expr: add_expr . '+' mul_expr
  118         | add_expr . '-' mul_expr

    '+'  shift, and go to state 145
    '-'  shift, and go to state 146

    $default  reduce using rule 114 (rel_expr)


State 185

  115 rel_expr: rel_expr GE add_expr .
  117 add_expr: add_expr . '+' mul_expr
  118         | add_expr . '-' mul_expr

    '+'  shift, and go to state 145
    '-'  shift, and go to state 146

    $default  reduce using rule 115 (rel_expr)


State 186

  112 rel_expr: rel_expr '<' add_expr .
  117 add_expr: add_expr . '+' mul_expr
  118         | add_expr . '-' mul_expr

    '+'  shift, and go to state 145
    '-'  shift, and go to state 146

    $default  reduce using rule 112 (rel_expr)


State 187

  113 rel_expr: rel_expr '>' add_expr .
  117 add_expr: add_expr . '+' mul_expr
  118         | add_expr . '-' mul_expr

    '+'  shift, and go to state 145
    '-'  shift, and go to state 146

    $default  reduce using rule 113 (rel_expr)


State 188

  117 add_expr: add_expr '+' mul_expr .
  120 mul_expr: mul_expr . '*' unary_expr
  121         | mul_expr . '/' unary_expr

    '*'  shift, and go to state 147
    '/'  shift, and go to state 148

    $default  reduce using rule 117 (add_expr)


State 189

  118 add_expr: add_expr '-' mul_expr .
  120 mul_expr: mul_expr . '*' unary_expr
  121         | mul_expr . '/' unary_expr

    '*'  shift, and go to state 147
    '/'  shift, and go to state 148

    $default  reduce using rule 118 (add_expr)


State 190

  120 mul_expr: mul_expr '*' unary_expr .

    $default  reduce using rule 120 (mul_expr)


State 191

  121 mul_expr: mul_expr '/' unary_expr .

    $default  reduce using rule 121 (mul_expr)


State 192

  127 postfix_expr: postfix_expr '[' ':' . ']'
  129             | postfix_expr '[' ':' . expr ']'
  131             | postfix_expr '[' ':' . expr ':' expr ']'

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    ']'         shift, and go to state 240
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 241
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 193

  100 type_list: type_list . ',' type
  133 postfix_expr: postfix_expr '[' type_list . ']'

    ','  shift, and go to state 196
    ']'  shift, and go to state 242


State 194

  126 postfix_expr: postfix_expr '[' expr . ']'
  128             | postfix_expr '[' expr . ':' ']'
  130             | postfix_expr '[' expr . ':' expr ']'
  132             | postfix_expr '[' expr . ':' expr ':' expr ']'

    ']'  shift, and go to state 243
    ':'  shift, and go to state 244


State 195

  102 expr_list: expr_list ',' expr .

    $default  reduce using rule 102 (expr_list)


State 196

  100 type_list: type_list ',' . type

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    '['     shift, and go to state 66

    type_name  go to state 68
    type       go to state 245


State 197

   95 type: type_name '[' type_list ']' .

    $default  reduce using rule 95 (type)


State 198

   37 type_or_builtin: FUNC '(' ')' .

    $default  reduce using rule 37 (type_or_builtin)


State 199

   30 param_list: param_list . ',' param_decl
   36 type_or_builtin: FUNC '(' param_list . ')'

    ')'  shift, and go to state 246
    ','  shift, and go to state 163


State 200

   68 return_stmt: RETURN .
   69            | RETURN . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    $default  reduce using rule 68 (return_stmt)

    expr_list     go to state 247
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 201

   47 stmt: BREAK .

    $default  reduce using rule 47 (stmt)


State 202

   48 stmt: CONTINUE .

    $default  reduce using rule 48 (stmt)


State 203

  147 if_stmt: IF . '(' expr ')' block ELSE if_stmt
  148        | IF . '(' expr ')' block ELSE block
  149        | IF . '(' expr ')' block

    '('  shift, and go to state 248


State 204

  150 switch_stmt: SWITCH . '(' expr ')' '{' case_list '}'
  151            | SWITCH . '{' case_list '}'

    '('  shift, and go to state 249
    '{'  shift, and go to state 250


State 205

  161 do_while_stmt: DO . block WHILE '(' expr ')' ';'

    '{'  shift, and go to state 157

    block  go to state 251


State 206

  160 while_stmt: WHILE . '(' expr ')' block

    '('  shift, and go to state 252


State 207

  156 for_stmt: FOR . '(' simple_stmt ';' expr ';' simple_stmt ')' block
  157         | FOR . '(' ';' expr ';' ')' block
  158         | FOR . '(' ';' ';' ')' block
  159         | FOR . expr block

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 253
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 254
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 208

  162 foreach_stmt: FOREACH . '(' ID ':' expr ')' block
  163             | FOREACH . '(' type ID ':' expr ')' block

    '('  shift, and go to state 255


State 209

   41 block: '{' '}' .

    $default  reduce using rule 41 (block)


State 210

   44 stmt: decl .

    $default  reduce using rule 44 (stmt)


State 211

   49 stmt: block .

    $default  reduce using rule 49 (stmt)


State 212

   40 block: '{' stmt_list . '}'
   42 stmt_list: stmt_list . stmt ';'

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 200
    BREAK       shift, and go to state 201
    CONTINUE    shift, and go to state 202
    IF          shift, and go to state 203
    SWITCH      shift, and go to state 204
    DO          shift, and go to state 205
    WHILE       shift, and go to state 206
    FOR         shift, and go to state 207
    FOREACH     shift, and go to state 208
    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '{'         shift, and go to state 157
    '}'         shift, and go to state 256
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    decl             go to state 210
    block            go to state 211
    stmt             go to state 257
    simple_stmt      go to state 214
    assignment_stmt  go to state 215
    lvalue           go to state 216
    return_stmt      go to state 217
    const_decl       go to state 33
    var_decl         go to state 34
    expr             go to state 218
    or_expr          go to state 96
    and_expr         go to state 97
    eq_expr          go to state 98
    rel_expr         go to state 99
    add_expr         go to state 100
    mul_expr         go to state 101
    unary_expr       go to state 102
    postfix_expr     go to state 103
    primary_expr     go to state 104
    primary_name     go to state 219
    operand          go to state 106
    if_stmt          go to state 220
    switch_stmt      go to state 221
    for_stmt         go to state 222
    while_stmt       go to state 223
    do_while_stmt    go to state 224
    foreach_stmt     go to state 225


State 213

   43 stmt_list: stmt . ';'

    ';'  shift, and go to state 258


State 214

   45 stmt: simple_stmt .

    $default  reduce using rule 45 (stmt)


State 215

   59 simple_stmt: assignment_stmt .

    $default  reduce using rule 59 (simple_stmt)


State 216

   60 assignment_stmt: lvalue . '=' expr_list
   61                | lvalue . PLUS_ASSIGN expr_list
   62                | lvalue . MINUS_ASSIGN expr_list
   63                | lvalue . MUL_ASSIGN expr_list
   64                | lvalue . DIV_ASSIGN expr_list
   65                | lvalue . TILDE_ASSIGN expr_list
   67 lvalue: lvalue . ',' primary_name

    PLUS_ASSIGN   shift, and go to state 259
    MINUS_ASSIGN  shift, and go to state 260
    MUL_ASSIGN    shift, and go to state 261
    DIV_ASSIGN    shift, and go to state 262
    TILDE_ASSIGN  shift, and go to state 263
    ','           shift, and go to state 264
    '='           shift, and go to state 265


State 217

   46 stmt: return_stmt .

    $default  reduce using rule 46 (stmt)


State 218

   56 simple_stmt: expr .
   57            | expr . INC
   58            | expr . DEC

    INC  shift, and go to state 266
    DEC  shift, and go to state 267

    $default  reduce using rule 56 (simple_stmt)


State 219

   66 lvalue: primary_name .
  141 operand: primary_name .

    PLUS_ASSIGN   reduce using rule 66 (lvalue)
    MINUS_ASSIGN  reduce using rule 66 (lvalue)
    MUL_ASSIGN    reduce using rule 66 (lvalue)
    DIV_ASSIGN    reduce using rule 66 (lvalue)
    TILDE_ASSIGN  reduce using rule 66 (lvalue)
    ','           reduce using rule 66 (lvalue)
    '='           reduce using rule 66 (lvalue)
    $default      reduce using rule 141 (operand)


State 220

   50 stmt: if_stmt .

    $default  reduce using rule 50 (stmt)


State 221

   51 stmt: switch_stmt .

    $default  reduce using rule 51 (stmt)


State 222

   52 stmt: for_stmt .

    $default  reduce using rule 52 (stmt)


State 223

   53 stmt: while_stmt .

    $default  reduce using rule 53 (stmt)


State 224

   54 stmt: do_while_stmt .

    $default  reduce using rule 54 (stmt)


State 225

   55 stmt: foreach_stmt .

    $default  reduce using rule 55 (stmt)


State 226

   29 func_decl: FUNC ID '(' ')' type block .

    $default  reduce using rule 29 (func_decl)


State 227

   39 type_or_builtin: '[' ']' type .

    $default  reduce using rule 39 (type_or_builtin)


State 228

   38 type_or_builtin: '[' expr ']' . type

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    '['     shift, and go to state 66

    type_name  go to state 68
    type       go to state 268


State 229

   26 func_decl: FUNC ID '(' param_list ')' block .

    $default  reduce using rule 26 (func_decl)


State 230

   28 func_decl: FUNC ID '(' param_list ')' type . block

    '{'  shift, and go to state 157

    block  go to state 269


State 231

   30 param_list: param_list ',' param_decl .

    $default  reduce using rule 30 (param_list)


State 232

   35 type_or_builtin: type_name '[' type_list . ']'
  100 type_list: type_list . ',' type

    ','  shift, and go to state 196
    ']'  shift, and go to state 270


State 233

  173 class_member: OVERRIDE func_decl .

    $default  reduce using rule 173 (class_member)


State 234

  171 class_member: decl ';' .

    $default  reduce using rule 171 (class_member)


State 235

  164 class_decl: CLASS ID class_inherit_opt '{' class_body_opt '}' .

    $default  reduce using rule 164 (class_decl)


State 236

  169 class_body: class_body class_member .

    $default  reduce using rule 169 (class_body)


State 237

  179 enum_member: ID '=' expr .

    $default  reduce using rule 179 (enum_member)


State 238

  175 enum_decl: ENUM ID '{' enum_member_list ',' '}' .

    $default  reduce using rule 175 (enum_decl)


State 239

  176 enum_member_list: enum_member_list ',' enum_member .

    $default  reduce using rule 176 (enum_member_list)


State 240

  127 postfix_expr: postfix_expr '[' ':' ']' .

    $default  reduce using rule 127 (postfix_expr)


State 241

  129 postfix_expr: postfix_expr '[' ':' expr . ']'
  131             | postfix_expr '[' ':' expr . ':' expr ']'

    ']'  shift, and go to state 271
    ':'  shift, and go to state 272


State 242

  133 postfix_expr: postfix_expr '[' type_list ']' .

    $default  reduce using rule 133 (postfix_expr)


State 243

  126 postfix_expr: postfix_expr '[' expr ']' .

    $default  reduce using rule 126 (postfix_expr)


State 244

  128 postfix_expr: postfix_expr '[' expr ':' . ']'
  130             | postfix_expr '[' expr ':' . expr ']'
  132             | postfix_expr '[' expr ':' . expr ':' expr ']'

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    ']'         shift, and go to state 273
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 274
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 245

  100 type_list: type_list ',' type .

    $default  reduce using rule 100 (type_list)


State 246

   36 type_or_builtin: FUNC '(' param_list ')' .

    $default  reduce using rule 36 (type_or_builtin)


State 247

   69 return_stmt: RETURN expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 69 (return_stmt)


State 248

  147 if_stmt: IF '(' . expr ')' block ELSE if_stmt
  148        | IF '(' . expr ')' block ELSE block
  149        | IF '(' . expr ')' block

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 275
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 249

  150 switch_stmt: SWITCH '(' . expr ')' '{' case_list '}'

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 276
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 250

  151 switch_stmt: SWITCH '{' . case_list '}'

    CASE     shift, and go to state 277
    DEFAULT  shift, and go to state 278

    case_list  go to state 279
    case_item  go to state 280


State 251

  161 do_while_stmt: DO block . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 281


State 252

  160 while_stmt: WHILE '(' . expr ')' block

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 282
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 253

  142 operand: '(' . expr ')'
  156 for_stmt: FOR '(' . simple_stmt ';' expr ';' simple_stmt ')' block
  157         | FOR '(' . ';' expr ';' ')' block
  158         | FOR '(' . ';' ';' ')' block

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    ';'         shift, and go to state 283
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    simple_stmt      go to state 284
    assignment_stmt  go to state 215
    lvalue           go to state 216
    expr             go to state 285
    or_expr          go to state 96
    and_expr         go to state 97
    eq_expr          go to state 98
    rel_expr         go to state 99
    add_expr         go to state 100
    mul_expr         go to state 101
    unary_expr       go to state 102
    postfix_expr     go to state 103
    primary_expr     go to state 104
    primary_name     go to state 219
    operand          go to state 106


State 254

  159 for_stmt: FOR expr . block

    '{'  shift, and go to state 157

    block  go to state 286


State 255

  162 foreach_stmt: FOREACH '(' . ID ':' expr ')' block
  163             | FOREACH '(' . type ID ':' expr ')' block

    FUNC    shift, and go to state 56
    INT     shift, and go to state 57
    FLOAT   shift, and go to state 58
    DOUBLE  shift, and go to state 59
    REAL    shift, and go to state 60
    BOOL    shift, and go to state 61
    CHAR    shift, and go to state 62
    STRING  shift, and go to state 63
    VOID    shift, and go to state 64
    ID      shift, and go to state 287
    '['     shift, and go to state 66

    type_name  go to state 68
    type       go to state 288


State 256

   40 block: '{' stmt_list '}' .

    $default  reduce using rule 40 (block)


State 257

   42 stmt_list: stmt_list stmt . ';'

    ';'  shift, and go to state 289


State 258

   43 stmt_list: stmt ';' .

    $default  reduce using rule 43 (stmt_list)


State 259

   61 assignment_stmt: lvalue PLUS_ASSIGN . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 290
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 260

   62 assignment_stmt: lvalue MINUS_ASSIGN . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 291
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 261

   63 assignment_stmt: lvalue MUL_ASSIGN . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 292
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 262

   64 assignment_stmt: lvalue DIV_ASSIGN . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 293
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 263

   65 assignment_stmt: lvalue TILDE_ASSIGN . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 294
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 264

   67 lvalue: lvalue ',' . primary_name

    THIS   shift, and go to state 84
    SUPER  shift, and go to state 85
    ID     shift, and go to state 89

    primary_name  go to state 295


State 265

   60 assignment_stmt: lvalue '=' . expr_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr_list     go to state 296
    expr          go to state 108
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 266

   57 simple_stmt: expr INC .

    $default  reduce using rule 57 (simple_stmt)


State 267

   58 simple_stmt: expr DEC .

    $default  reduce using rule 58 (simple_stmt)


State 268

   38 type_or_builtin: '[' expr ']' type .

    $default  reduce using rule 38 (type_or_builtin)


State 269

   28 func_decl: FUNC ID '(' param_list ')' type block .

    $default  reduce using rule 28 (func_decl)


State 270

   35 type_or_builtin: type_name '[' type_list ']' .

    $default  reduce using rule 35 (type_or_builtin)


State 271

  129 postfix_expr: postfix_expr '[' ':' expr ']' .

    $default  reduce using rule 129 (postfix_expr)


State 272

  131 postfix_expr: postfix_expr '[' ':' expr ':' . expr ']'

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 297
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 273

  128 postfix_expr: postfix_expr '[' expr ':' ']' .

    $default  reduce using rule 128 (postfix_expr)


State 274

  130 postfix_expr: postfix_expr '[' expr ':' expr . ']'
  132             | postfix_expr '[' expr ':' expr . ':' expr ']'

    ']'  shift, and go to state 298
    ':'  shift, and go to state 299


State 275

  147 if_stmt: IF '(' expr . ')' block ELSE if_stmt
  148        | IF '(' expr . ')' block ELSE block
  149        | IF '(' expr . ')' block

    ')'  shift, and go to state 300


State 276

  150 switch_stmt: SWITCH '(' expr . ')' '{' case_list '}'

    ')'  shift, and go to state 301


State 277

  154 case_item: CASE . expr ':' stmt_list

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 302
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 278

  155 case_item: DEFAULT . ':' stmt_list

    ':'  shift, and go to state 303


State 279

  151 switch_stmt: SWITCH '{' case_list . '}'
  152 case_list: case_list . case_item

    CASE     shift, and go to state 277
    DEFAULT  shift, and go to state 278
    '}'      shift, and go to state 304

    case_item  go to state 305


State 280

  153 case_list: case_item .

    $default  reduce using rule 153 (case_list)


State 281

  161 do_while_stmt: DO block WHILE . '(' expr ')' ';'

    '('  shift, and go to state 306


State 282

  160 while_stmt: WHILE '(' expr . ')' block

    ')'  shift, and go to state 307


State 283

  157 for_stmt: FOR '(' ';' . expr ';' ')' block
  158         | FOR '(' ';' . ';' ')' block

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    ';'         shift, and go to state 308
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 309
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 284

  156 for_stmt: FOR '(' simple_stmt . ';' expr ';' simple_stmt ')' block

    ';'  shift, and go to state 310


State 285

   56 simple_stmt: expr .
   57            | expr . INC
   58            | expr . DEC
  142 operand: '(' expr . ')'

    INC  shift, and go to state 266
    DEC  shift, and go to state 267
    ')'  shift, and go to state 178

    $default  reduce using rule 56 (simple_stmt)


State 286

  159 for_stmt: FOR expr block .

    $default  reduce using rule 159 (for_stmt)


State 287

  162 foreach_stmt: FOREACH '(' ID . ':' expr ')' block

    ':'  shift, and go to state 311


State 288

  163 foreach_stmt: FOREACH '(' type . ID ':' expr ')' block

    ID  shift, and go to state 312


State 289

   42 stmt_list: stmt_list stmt ';' .

    $default  reduce using rule 42 (stmt_list)


State 290

   61 assignment_stmt: lvalue PLUS_ASSIGN expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 61 (assignment_stmt)


State 291

   62 assignment_stmt: lvalue MINUS_ASSIGN expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 62 (assignment_stmt)


State 292

   63 assignment_stmt: lvalue MUL_ASSIGN expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 63 (assignment_stmt)


State 293

   64 assignment_stmt: lvalue DIV_ASSIGN expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 64 (assignment_stmt)


State 294

   65 assignment_stmt: lvalue TILDE_ASSIGN expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 65 (assignment_stmt)


State 295

   67 lvalue: lvalue ',' primary_name .

    $default  reduce using rule 67 (lvalue)


State 296

   60 assignment_stmt: lvalue '=' expr_list .
  102 expr_list: expr_list . ',' expr

    ','  shift, and go to state 152

    $default  reduce using rule 60 (assignment_stmt)


State 297

  131 postfix_expr: postfix_expr '[' ':' expr ':' expr . ']'

    ']'  shift, and go to state 313


State 298

  130 postfix_expr: postfix_expr '[' expr ':' expr ']' .

    $default  reduce using rule 130 (postfix_expr)


State 299

  132 postfix_expr: postfix_expr '[' expr ':' expr ':' . expr ']'

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 314
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 300

  147 if_stmt: IF '(' expr ')' . block ELSE if_stmt
  148        | IF '(' expr ')' . block ELSE block
  149        | IF '(' expr ')' . block

    '{'  shift, and go to state 157

    block  go to state 315


State 301

  150 switch_stmt: SWITCH '(' expr ')' . '{' case_list '}'

    '{'  shift, and go to state 316


State 302

  154 case_item: CASE expr . ':' stmt_list

    ':'  shift, and go to state 317


State 303

  155 case_item: DEFAULT ':' . stmt_list

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 200
    BREAK       shift, and go to state 201
    CONTINUE    shift, and go to state 202
    IF          shift, and go to state 203
    SWITCH      shift, and go to state 204
    DO          shift, and go to state 205
    WHILE       shift, and go to state 206
    FOR         shift, and go to state 207
    FOREACH     shift, and go to state 208
    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '{'         shift, and go to state 157
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    decl             go to state 210
    block            go to state 211
    stmt_list        go to state 318
    stmt             go to state 213
    simple_stmt      go to state 214
    assignment_stmt  go to state 215
    lvalue           go to state 216
    return_stmt      go to state 217
    const_decl       go to state 33
    var_decl         go to state 34
    expr             go to state 218
    or_expr          go to state 96
    and_expr         go to state 97
    eq_expr          go to state 98
    rel_expr         go to state 99
    add_expr         go to state 100
    mul_expr         go to state 101
    unary_expr       go to state 102
    postfix_expr     go to state 103
    primary_expr     go to state 104
    primary_name     go to state 219
    operand          go to state 106
    if_stmt          go to state 220
    switch_stmt      go to state 221
    for_stmt         go to state 222
    while_stmt       go to state 223
    do_while_stmt    go to state 224
    foreach_stmt     go to state 225


State 304

  151 switch_stmt: SWITCH '{' case_list '}' .

    $default  reduce using rule 151 (switch_stmt)


State 305

  152 case_list: case_list case_item .

    $default  reduce using rule 152 (case_list)


State 306

  161 do_while_stmt: DO block WHILE '(' . expr ')' ';'

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 319
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 307

  160 while_stmt: WHILE '(' expr ')' . block

    '{'  shift, and go to state 157

    block  go to state 320


State 308

  158 for_stmt: FOR '(' ';' ';' . ')' block

    ')'  shift, and go to state 321


State 309

  157 for_stmt: FOR '(' ';' expr . ';' ')' block

    ';'  shift, and go to state 322


State 310

  156 for_stmt: FOR '(' simple_stmt ';' . expr ';' simple_stmt ')' block

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 323
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 311

  162 foreach_stmt: FOREACH '(' ID ':' . expr ')' block

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 324
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 312

  163 foreach_stmt: FOREACH '(' type ID . ':' expr ')' block

    ':'  shift, and go to state 325


State 313

  131 postfix_expr: postfix_expr '[' ':' expr ':' expr ']' .

    $default  reduce using rule 131 (postfix_expr)


State 314

  132 postfix_expr: postfix_expr '[' expr ':' expr ':' expr . ']'

    ']'  shift, and go to state 326


State 315

  147 if_stmt: IF '(' expr ')' block . ELSE if_stmt
  148        | IF '(' expr ')' block . ELSE block
  149        | IF '(' expr ')' block .

    ELSE  shift, and go to state 327

    $default  reduce using rule 149 (if_stmt)


State 316

  150 switch_stmt: SWITCH '(' expr ')' '{' . case_list '}'

    CASE     shift, and go to state 277
    DEFAULT  shift, and go to state 278

    case_list  go to state 328
    case_item  go to state 280


State 317

  154 case_item: CASE expr ':' . stmt_list

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 200
    BREAK       shift, and go to state 201
    CONTINUE    shift, and go to state 202
    IF          shift, and go to state 203
    SWITCH      shift, and go to state 204
    DO          shift, and go to state 205
    WHILE       shift, and go to state 206
    FOR         shift, and go to state 207
    FOREACH     shift, and go to state 208
    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '{'         shift, and go to state 157
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    decl             go to state 210
    block            go to state 211
    stmt_list        go to state 329
    stmt             go to state 213
    simple_stmt      go to state 214
    assignment_stmt  go to state 215
    lvalue           go to state 216
    return_stmt      go to state 217
    const_decl       go to state 33
    var_decl         go to state 34
    expr             go to state 218
    or_expr          go to state 96
    and_expr         go to state 97
    eq_expr          go to state 98
    rel_expr         go to state 99
    add_expr         go to state 100
    mul_expr         go to state 101
    unary_expr       go to state 102
    postfix_expr     go to state 103
    primary_expr     go to state 104
    primary_name     go to state 219
    operand          go to state 106
    if_stmt          go to state 220
    switch_stmt      go to state 221
    for_stmt         go to state 222
    while_stmt       go to state 223
    do_while_stmt    go to state 224
    foreach_stmt     go to state 225


State 318

   42 stmt_list: stmt_list . stmt ';'
  155 case_item: DEFAULT ':' stmt_list .

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 200
    BREAK       shift, and go to state 201
    CONTINUE    shift, and go to state 202
    IF          shift, and go to state 203
    SWITCH      shift, and go to state 204
    DO          shift, and go to state 205
    WHILE       shift, and go to state 206
    FOR         shift, and go to state 207
    FOREACH     shift, and go to state 208
    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '{'         shift, and go to state 157
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    $default  reduce using rule 155 (case_item)

    decl             go to state 210
    block            go to state 211
    stmt             go to state 257
    simple_stmt      go to state 214
    assignment_stmt  go to state 215
    lvalue           go to state 216
    return_stmt      go to state 217
    const_decl       go to state 33
    var_decl         go to state 34
    expr             go to state 218
    or_expr          go to state 96
    and_expr         go to state 97
    eq_expr          go to state 98
    rel_expr         go to state 99
    add_expr         go to state 100
    mul_expr         go to state 101
    unary_expr       go to state 102
    postfix_expr     go to state 103
    primary_expr     go to state 104
    primary_name     go to state 219
    operand          go to state 106
    if_stmt          go to state 220
    switch_stmt      go to state 221
    for_stmt         go to state 222
    while_stmt       go to state 223
    do_while_stmt    go to state 224
    foreach_stmt     go to state 225


State 319

  161 do_while_stmt: DO block WHILE '(' expr . ')' ';'

    ')'  shift, and go to state 330


State 320

  160 while_stmt: WHILE '(' expr ')' block .

    $default  reduce using rule 160 (while_stmt)


State 321

  158 for_stmt: FOR '(' ';' ';' ')' . block

    '{'  shift, and go to state 157

    block  go to state 331


State 322

  157 for_stmt: FOR '(' ';' expr ';' . ')' block

    ')'  shift, and go to state 332


State 323

  156 for_stmt: FOR '(' simple_stmt ';' expr . ';' simple_stmt ')' block

    ';'  shift, and go to state 333


State 324

  162 foreach_stmt: FOREACH '(' ID ':' expr . ')' block

    ')'  shift, and go to state 334


State 325

  163 foreach_stmt: FOREACH '(' type ID ':' . expr ')' block

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    expr          go to state 335
    or_expr       go to state 96
    and_expr      go to state 97
    eq_expr       go to state 98
    rel_expr      go to state 99
    add_expr      go to state 100
    mul_expr      go to state 101
    unary_expr    go to state 102
    postfix_expr  go to state 103
    primary_expr  go to state 104
    primary_name  go to state 105
    operand       go to state 106


State 326

  132 postfix_expr: postfix_expr '[' expr ':' expr ':' expr ']' .

    $default  reduce using rule 132 (postfix_expr)


State 327

  147 if_stmt: IF '(' expr ')' block ELSE . if_stmt
  148        | IF '(' expr ')' block ELSE . block

    IF   shift, and go to state 203
    '{'  shift, and go to state 157

    block    go to state 336
    if_stmt  go to state 337


State 328

  150 switch_stmt: SWITCH '(' expr ')' '{' case_list . '}'
  152 case_list: case_list . case_item

    CASE     shift, and go to state 277
    DEFAULT  shift, and go to state 278
    '}'      shift, and go to state 338

    case_item  go to state 305


State 329

   42 stmt_list: stmt_list . stmt ';'
  154 case_item: CASE expr ':' stmt_list .

    CONST       shift, and go to state 23
    VAR         shift, and go to state 25
    RETURN      shift, and go to state 200
    BREAK       shift, and go to state 201
    CONTINUE    shift, and go to state 202
    IF          shift, and go to state 203
    SWITCH      shift, and go to state 204
    DO          shift, and go to state 205
    WHILE       shift, and go to state 206
    FOR         shift, and go to state 207
    FOREACH     shift, and go to state 208
    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '{'         shift, and go to state 157
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    $default  reduce using rule 154 (case_item)

    decl             go to state 210
    block            go to state 211
    stmt             go to state 257
    simple_stmt      go to state 214
    assignment_stmt  go to state 215
    lvalue           go to state 216
    return_stmt      go to state 217
    const_decl       go to state 33
    var_decl         go to state 34
    expr             go to state 218
    or_expr          go to state 96
    and_expr         go to state 97
    eq_expr          go to state 98
    rel_expr         go to state 99
    add_expr         go to state 100
    mul_expr         go to state 101
    unary_expr       go to state 102
    postfix_expr     go to state 103
    primary_expr     go to state 104
    primary_name     go to state 219
    operand          go to state 106
    if_stmt          go to state 220
    switch_stmt      go to state 221
    for_stmt         go to state 222
    while_stmt       go to state 223
    do_while_stmt    go to state 224
    foreach_stmt     go to state 225


State 330

  161 do_while_stmt: DO block WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 339


State 331

  158 for_stmt: FOR '(' ';' ';' ')' block .

    $default  reduce using rule 158 (for_stmt)


State 332

  157 for_stmt: FOR '(' ';' expr ';' ')' . block

    '{'  shift, and go to state 157

    block  go to state 340


State 333

  156 for_stmt: FOR '(' simple_stmt ';' expr ';' . simple_stmt ')' block

    THIS        shift, and go to state 84
    SUPER       shift, and go to state 85
    INT_LIT     shift, and go to state 86
    FLOAT_LIT   shift, and go to state 87
    BOOL_LIT    shift, and go to state 88
    ID          shift, and go to state 89
    STRING_LIT  shift, and go to state 90
    '('         shift, and go to state 91
    '-'         shift, and go to state 93
    '!'         shift, and go to state 94

    simple_stmt      go to state 341
    assignment_stmt  go to state 215
    lvalue           go to state 216
    expr             go to state 218
    or_expr          go to state 96
    and_expr         go to state 97
    eq_expr          go to state 98
    rel_expr         go to state 99
    add_expr         go to state 100
    mul_expr         go to state 101
    unary_expr       go to state 102
    postfix_expr     go to state 103
    primary_expr     go to state 104
    primary_name     go to state 219
    operand          go to state 106


State 334

  162 foreach_stmt: FOREACH '(' ID ':' expr ')' . block

    '{'  shift, and go to state 157

    block  go to state 342


State 335

  163 foreach_stmt: FOREACH '(' type ID ':' expr . ')' block

    ')'  shift, and go to state 343


State 336

  148 if_stmt: IF '(' expr ')' block ELSE block .

    $default  reduce using rule 148 (if_stmt)


State 337

  147 if_stmt: IF '(' expr ')' block ELSE if_stmt .

    $default  reduce using rule 147 (if_stmt)


State 338

  150 switch_stmt: SWITCH '(' expr ')' '{' case_list '}' .

    $default  reduce using rule 150 (switch_stmt)


State 339

  161 do_while_stmt: DO block WHILE '(' expr ')' ';' .

    $default  reduce using rule 161 (do_while_stmt)


State 340

  157 for_stmt: FOR '(' ';' expr ';' ')' block .

    $default  reduce using rule 157 (for_stmt)


State 341

  156 for_stmt: FOR '(' simple_stmt ';' expr ';' simple_stmt . ')' block

    ')'  shift, and go to state 344


State 342

  162 foreach_stmt: FOREACH '(' ID ':' expr ')' block .

    $default  reduce using rule 162 (foreach_stmt)


State 343

  163 foreach_stmt: FOREACH '(' type ID ':' expr ')' . block

    '{'  shift, and go to state 157

    block  go to state 345


State 344

  156 for_stmt: FOR '(' simple_stmt ';' expr ';' simple_stmt ')' . block

    '{'  shift, and go to state 157

    block  go to state 346


State 345

  163 foreach_stmt: FOREACH '(' type ID ':' expr ')' block .

    $default  reduce using rule 163 (foreach_stmt)


State 346

  156 for_stmt: FOR '(' simple_stmt ';' expr ';' simple_stmt ')' block .

    $default  reduce using rule 156 (for_stmt)
